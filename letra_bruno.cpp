#include <glad/glad.h>
#include <GLFW/glfw3.h>
#include <vector>
#include <iostream>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>

void framebuffer_size_callback(GLFWwindow* window, int width, int height);
void processInput(GLFWwindow *window);

// settings
const unsigned int SCR_WIDTH = 800;
const unsigned int SCR_HEIGHT = 600;
unsigned int CAM = 0;

glm::mat4 View;
glm::mat4 Model;
glm::mat4 MVP;
glm::mat4 Projection;

/*// Input vertex data, different for all executions of this shader.
// Output data color, will be interpolated for each fragment.
const char *vertexShaderSource = "#version 330 core\n"
"layout (location = 0) in vec3 aPos;\n"
"layout (location = 1) in vec3 vertexColor;\n"
"out vec3 fragmentColor;\n"
"uniform mat4 MVP;\n"
"void main()\n"
"{\n"
" gl_Position = MVP * vec4(aPos, 1.0);\n"
" fragmentColor = vertexColor;\n"
"}\0";*/

// Input vertex data, different for all executions of this shader.
// Output data color, will be interpolated for each fragment.
const char *vertexShaderSource = "#version 330 core\n"
"layout (location = 0) in vec3 aPos;\n"
"layout (location = 1) in vec3 vertexColor;\n"
"out vec3 fragmentColor;\n"
"uniform mat4 MVP;\n"
"void main()\n"
"{\n"
" gl_Position = MVP * vec4(aPos, 1.0);\n"
" fragmentColor = vertexColor;\n"
"}\0";
const char *fragmentShaderSource = "#version 330 core\n"
                                   "in vec3 fragmentColor;\n"
                                   "out vec3 FragColor;\n"
                                   "void main()\n"
                                   "{\n"
                                   " FragColor = fragmentColor;\n"
                                   "}\n\0";

int main()
{
    // glfw: initialize and configure
    // ------------------------------
    glfwInit();
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
    glfwWindowHint(GLFW_SAMPLES,8);
    
#ifdef __APPLE__
    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);
#endif

    // glfw window creation
    // --------------------
    GLFWwindow* window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, "LearnOpenGL", NULL, NULL);
    if (window == NULL)
    {
        std::cout << "Failed to create GLFW window" << std::endl;
        glfwTerminate();
        return -1;
    }
    glfwMakeContextCurrent(window);
    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);
    

    // glad: load all OpenGL function pointers
    // ---------------------------------------
    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))
    {
        std::cout << "Failed to initialize GLAD" << std::endl;
        return -1;
    }


    // build and compile our shader program
    // ------------------------------------
    // vertex shader
    unsigned int vertexShader = glCreateShader(GL_VERTEX_SHADER);
    glShaderSource(vertexShader, 1, &vertexShaderSource, NULL);
    glCompileShader(vertexShader);
    // check for shader compile errors
    int success;
    char infoLog[512];
    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(vertexShader, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::VERTEX::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // fragment shader
    unsigned int fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);
    glShaderSource(fragmentShader, 1, &fragmentShaderSource, NULL);
    glCompileShader(fragmentShader);
    // check for shader compile errors
    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(fragmentShader, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // link shaders
    unsigned int shaderProgram = glCreateProgram();
    glAttachShader(shaderProgram, vertexShader);
    glAttachShader(shaderProgram, fragmentShader);
    glLinkProgram(shaderProgram);
    // check for linking errors
    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &success);
    if (!success) {
        glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::PROGRAM::LINKING_FAILED\n" << infoLog << std::endl;
    }
    glDeleteShader(vertexShader);
    glDeleteShader(fragmentShader);

    // set up vertex data (and buffer(s)) and configure vertex attributes
    // ------------------------------------------------------------------
    
float vertices[] = {

    0.37231f, -0.70344, 0.0f, // D
    0.33f, -0.68f, 0.0f, // C
    0.35637f, -0.62304f, 0.0f,  // G

    0.37231f, -0.70344, 0.0f, // D
    0.41399f, -0.64194, 0.0f, // Q2
    0.35637f, -0.62304f, 0.0f,  // G

    0.41399f, -0.64194, 0.0f, // Q2
    0.44798f, -0.58286, 0.0f, // F
    0.35637f, -0.62304f, 0.0f,  // G

    0.35637f, -0.62304f, 0.0f,  // G
    0.44798f, -0.58286, 0.0f, // F
    0.37029f, -0.57873f, 0.0f,  // R2

    0.44798f, -0.58286, 0.0f, // F
    0.37245f, -0.54042f, 0.0f,  // E
    0.37029f, -0.57873f, 0.0f,  // R2

    0.37245f, -0.54042f, 0.0f,  // E
    0.4656f, -0.53165f, 0.0f, // H
    0.44798f, -0.58286, 0.0f, // F

    0.37245f, -0.54042f, 0.0f,  // E
    0.4656f, -0.53165f, 0.0f, // H
    0.36179f, -0.51436f, 0.0f,  // I

    0.36179f, -0.51436f, 0.0f,  // I
    0.4656f, -0.53165f, 0.0f, // H
    0.46984f, -0.47744f, 0.0f,  // J

    0.36179f, -0.51436f, 0.0f,  // I
    0.46984f, -0.47744f, 0.0f,  // J
    0.33698f, -0.49905f, 0.0f,  // K

    0.44726f, -0.40741f, 0.0f,  // L
    0.33698f, -0.49905f, 0.0f,  // K
    0.41933f, -0.39327f, 0.0f,  // M

    0.44726f, -0.40741f, 0.0f,  // L
    0.46293f, -0.43321f, 0.0f,  // P2
    0.33698f, -0.49905f, 0.0f,  // K

    0.46984f, -0.47744f, 0.0f,  // J
    0.46293f, -0.43321f, 0.0f,  // P2
    0.33698f, -0.49905f, 0.0f,  // K

    0.33698f, -0.49905f, 0.0f,  // K
    0.41933f, -0.39327f, 0.0f,  // M
    0.35f, -0.39f, 0.0f,  // N

    0.33698f, -0.49905f, 0.0f,  // K
    0.35f, -0.39f, 0.0f,  // N
    0.27f, -0.39f, 0.0f,  // O

    0.33698f, -0.49905f, 0.0f,  // K
    0.27f, -0.39f, 0.0f,  // O
    0.2f, -0.39f, 0.0f,  // P

    0.33698f, -0.49905f, 0.0f,  // K
    0.2f, -0.39f, 0.0f,  // P
    0.12609f, -0.38548f, 0.0f, // Q

    0.33698f, -0.49905f, 0.0f,  // K
    0.12609f, -0.38548f, 0.0f, // Q
    0.13777f, -0.4858f, 0.0f,  // R

    0.13777f, -0.4858f, 0.0f,  // R
    0.12609f, -0.38548f, 0.0f, // Q
    0.06f, -0.37f, 0.0f,  // T

    0.02499f, -0.47678, 0.0f, // A1
    0.13777f, -0.4858f, 0.0f,  // R
    0.06f, -0.37f, 0.0f,  // T

    0.02499f, -0.47678, 0.0f, // A1
    0.06f, -0.37f, 0.0f,  // T
    -0.01f, -0.33f, 0.0f,  // U

    0.02499f, -0.47678, 0.0f, // A1
    -0.01f, -0.33f, 0.0f,  // U
    -0.04298f, -0.46057f, 0.0f,  // B1

    -0.04298f, -0.46057f, 0.0f,  // B1
    -0.01f, -0.33f, 0.0f,  // U
    -0.10207f, -0.43756f, 0.0f,  // S

    -0.10207f, -0.43756f, 0.0f,  // S
    -0.01f, -0.33f, 0.0f,  // U
    -0.05f, -0.28f, 0.0f,  // V

    -0.10207f, -0.43756f, 0.0f,  // S
    -0.05f, -0.28f, 0.0f,  // V
    -0.08f, -0.21f, 0.0f,  // W

    -0.10207f, -0.43756f, 0.0f,  // S
    -0.08f, -0.21f, 0.0f,  // W
    -0.15644f, -0.38685f, 0.0f,  // C1

    -0.15644f, -0.38685f, 0.0f,  // C1
    -0.08f, -0.21f, 0.0f,  // W
    -0.1928f, -0.32983f, 0.0f,  // D1

    -0.1928f, -0.32983f, 0.0f,  // D1
    -0.08f, -0.21f, 0.0f,  // W
    -0.21048f, -0.26604f, 0.0f,  // E1

    -0.21048f, -0.26604f, 0.0f,  // E1
    -0.08f, -0.21f, 0.0f,  // W
    -0.09f, -0.15f, 0.0f,  // Z

    -0.21048f, -0.26604f, 0.0f,  // E1
    -0.09f, -0.15f, 0.0f,  // Z
    -0.09f, -0.09f, 0.0f, // F1

    -0.21048f, -0.26604f, 0.0f,  // E1
    -0.09f, -0.09f, 0.0f, // F1
    -0.07713f, -0.01908f, 0.0f,  // G1

    -0.21048f, -0.26604f, 0.0f,  // E1
    -0.07713f, -0.01908f, 0.0f,  // G1
    -0.21554f, -0.19592f, 0.0f,  // S2

    -0.21554f, -0.19592f, 0.0f,  // S2
    -0.20814f, -0.10819f, 0.0f,  // I1
    -0.07713f, -0.01908f, 0.0f,  // G1

    -0.20814f, -0.10819f, 0.0f,  // I1
    -0.07713f, -0.01908f, 0.0f,  // G1
    -0.19483f, -0.04312f, 0.0f,  // J1

    -0.19483f, -0.04312f, 0.0f,  // J1
    -0.07713f, -0.01908f, 0.0f,  // G1
    -0.06025f, 0.06558f, 0.0f,  // H1

    -0.19483f, -0.04312f, 0.0f,  // J1
    -0.06025f, 0.06558f, 0.0f,  // H1
    -0.17043f, 0.0397f, 0.0f,  // K1

    -0.17043f, 0.0397f, 0.0f,  // K1
    -0.06025f, 0.06558f, 0.0f,  // H1
    -0.15f, 0.11f, 0.0f,  // L1

    -0.06025f, 0.06558f, 0.0f,  // H1
    -0.03f, 0.15f, 0.0f, // M1
    -0.15f, 0.11f, 0.0f,  // L1

    -0.15f, 0.11f, 0.0f,  // L1
    -0.03f, 0.15f, 0.0f, // M1
    0.01f, 0.23f, 0.0f,  // N1

    -0.15f, 0.11f, 0.0f,  // L1
    0.01f, 0.23f, 0.0f,  // N1
    0.06f, 0.31f, 0.0f,  // O1


    -0.15f, 0.11f, 0.0f,  // L1
    0.06f, 0.31f, 0.0f,  // O1
    -0.12f, 0.18f, 0.0f,  // H2

    -0.12f, 0.18f, 0.0f,  // H2
    0.06f, 0.31f, 0.0f,  // O1
    -0.09f, 0.23f, 0.0f,  // F2

    -0.09f, 0.23f, 0.0f,  // F2
    0.06f, 0.31f, 0.0f,  // O1
    -0.04f, 0.3f, 0.0f,  // G2

    -0.04f, 0.3f, 0.0f,  // G2
    0.06f, 0.31f, 0.0f,  // O1
    -0.0f, 0.35f, 0.0f, // Q1

    -0.0f, 0.35f, 0.0f, // Q1
    0.06f, 0.31f, 0.0f, // O1
    0.12f, 0.38f, 0.0f,  // P1

    -0.0f, 0.35f, 0.0f, // Q1
    0.12f, 0.38f, 0.0f,  // P1
    0.07f, 0.42f, 0.0f,  // R1

    0.07f, 0.42f, 0.0f,  // R1
    0.12f, 0.38f, 0.0f,  // P1
    0.25f, 0.51f, 0.0f,  // U1

    0.07f, 0.42f, 0.0f,  // R1
    0.25f, 0.51f, 0.0f,  // U1
    0.15f, 0.5f, 0.0f,  // S1

    0.15f, 0.5f, 0.0f,  // S1
    0.25f, 0.51f, 0.0f,  // U1
    0.23f, 0.58f, 0.0f,  // T1

    0.23f, 0.58f, 0.0f,  // T1
    0.25f, 0.51f, 0.0f,  // U1
    0.31f, 0.56f, 0.0f,  // V1

    0.31f, 0.56f, 0.0f,  // V1
    0.37f, 0.60f, 0.0f,  // O2
    0.23f, 0.58f, 0.0f,  // T1

    0.37f, 0.60f, 0.0f,  // O2
    0.43f, 0.63f, 0.0f,  // W1
    0.23f, 0.58f, 0.0f,  // T1

    0.43f, 0.63f, 0.0f,  // W1
    0.43f, 0.65f, 0.0f,  // Z1
    0.23f, 0.58f, 0.0f,  // T1*/

    0.43f, 0.65f, 0.0f,  // Z1
    0.29f, 0.64f, 0.0f,  // I2
    0.23f, 0.58f, 0.0f,  // T1

    0.29f, 0.64f, 0.0f,  // I2
    0.23f, 0.59f, 0.0f,  // J2
    0.23f, 0.58f, 0.0f,  // T1

    0.29f, 0.64f, 0.0f,  // I2
    0.22f, 0.6f, 0.0f,  // K2
    0.23f, 0.59f, 0.0f,  // J2

    0.29f, 0.64f, 0.0f,  // I2
    0.19f, 0.61f, 0.0f,  // L2
    0.22f, 0.6f, 0.0f,  // K2

    0.19f, 0.61f, 0.0f,  // L2
    0.29f, 0.64f, 0.0f,  // I2
    0.14f, 0.62f, 0.0f,  // M2

    0.29f, 0.64f, 0.0f,  // I2
    0.21f, 0.65f, 0.0f,  // A2
    0.14f, 0.62f, 0.0f,  // M2

    0.21f, 0.65f, 0.0f,  // A2
    0.14f, 0.67f, 0.0f,  // N2
    0.14f, 0.62f, 0.0f,  // M2

    0.14f, 0.67f, 0.0f,  // N2
    0.09f, 0.69f, 0.0f,  // B2
    0.14f, 0.62f, 0.0f,  // M2

    0.14f, 0.62f, 0.0f,  // M2
    0.09f, 0.69f, 0.0f,  // B2
    0.05f, 0.64f, 0.0f,  // E2

    0.05f, 0.64f, 0.0f,  // E2
    0.09f, 0.69f, 0.0f,  // B2
    0.03f, 0.72f, 0.0f,  // C2

    0.05f, 0.64f, 0.0f,  // E2
    0.03f, 0.72f, 0.0f,  // C2
    -0.03f, 0.66f, 0.0f,  // D2


////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////

    0.37231f, -0.70344, 0.25f, // D
    0.33f, -0.68f, 0.25f, // C
    0.35637f, -0.62304f, 0.25f,  // G

    0.37231f, -0.70344, 0.25f, // D
    0.41399f, -0.64194, 0.25f, // Q2
    0.35637f, -0.62304f, 0.25f,  // G

    0.41399f, -0.64194, 0.25f, // Q2
    0.44798f, -0.58286, 0.25f, // F
    0.35637f, -0.62304f, 0.25f,  // G

    0.35637f, -0.62304f, 0.25f,  // G
    0.44798f, -0.58286, 0.25f, // F
    0.37029f, -0.57873f, 0.25f,  // R2

    0.44798f, -0.58286, 0.25f, // F
    0.37245f, -0.54042f, 0.25f,  // E
    0.37029f, -0.57873f, 0.25f,  // R2

    0.37245f, -0.54042f, 0.25f,  // E
    0.4656f, -0.53165f, 0.25f, // H
    0.44798f, -0.58286, 0.25f, // F

    0.37245f, -0.54042f, 0.25f,  // E
    0.4656f, -0.53165f, 0.25f, // H
    0.36179f, -0.51436f, 0.25f,  // I

    0.36179f, -0.51436f, 0.25f,  // I
    0.4656f, -0.53165f, 0.25f, // H
    0.46984f, -0.47744f, 0.25f,  // J

    0.36179f, -0.51436f, 0.25f,  // I
    0.46984f, -0.47744f, 0.25f,  // J
    0.33698f, -0.49905f, 0.25f,  // K

    0.44726f, -0.40741f, 0.25f,  // L
    0.33698f, -0.49905f, 0.25f,  // K
    0.41933f, -0.39327f, 0.25f,  // M

    0.44726f, -0.40741f, 0.25f,  // L
    0.46293f, -0.43321f, 0.25f,  // P2
    0.33698f, -0.49905f, 0.25f,  // K

    0.46984f, -0.47744f, 0.25f,  // J
    0.46293f, -0.43321f, 0.25f,  // P2
    0.33698f, -0.49905f, 0.25f,  // K

    0.33698f, -0.49905f, 0.25f,  // K
    0.41933f, -0.39327f, 0.25f,  // M
    0.35f, -0.39f, 0.25f,  // N

    0.33698f, -0.49905f, 0.25f,  // K
    0.35f, -0.39f, 0.25f,  // N
    0.27f, -0.39f, 0.25f,  // O

    0.33698f, -0.49905f, 0.25f,  // K
    0.27f, -0.39f, 0.25f,  // O
    0.2f, -0.39f, 0.25f,  // P

    0.33698f, -0.49905f, 0.25f,  // K
    0.2f, -0.39f, 0.25f,  // P
    0.12609f, -0.38548f, 0.25f, // Q

    0.33698f, -0.49905f, 0.25f,  // K
    0.12609f, -0.38548f, 0.25f, // Q
    0.13777f, -0.4858f, 0.25f,  // R

    0.13777f, -0.4858f, 0.25f,  // R
    0.12609f, -0.38548f, 0.25f, // Q
    0.06f, -0.37f, 0.25f,  // T

    0.02499f, -0.47678, 0.25f, // A1
    0.13777f, -0.4858f, 0.25f,  // R
    0.06f, -0.37f, 0.25f,  // T

    0.02499f, -0.47678, 0.25f, // A1
    0.06f, -0.37f, 0.25f,  // T
    -0.01f, -0.33f, 0.25f,  // U

    0.02499f, -0.47678, 0.25f, // A1
    -0.01f, -0.33f, 0.25f,  // U
    -0.04298f, -0.46057f, 0.25f,  // B1

    -0.04298f, -0.46057f, 0.25f,  // B1
    -0.01f, -0.33f, 0.25f,  // U
    -0.10207f, -0.43756f, 0.25f,  // S

    -0.10207f, -0.43756f, 0.25f,  // S
    -0.01f, -0.33f, 0.25f,  // U
    -0.05f, -0.28f, 0.25f,  // V

    -0.10207f, -0.43756f, 0.25f,  // S
    -0.05f, -0.28f, 0.25f,  // V
    -0.08f, -0.21f, 0.25f,  // W

    -0.10207f, -0.43756f, 0.25f,  // S
    -0.08f, -0.21f, 0.25f,  // W
    -0.15644f, -0.38685f, 0.25f,  // C1

    -0.15644f, -0.38685f, 0.25f,  // C1
    -0.08f, -0.21f, 0.25f,  // W
    -0.1928f, -0.32983f, 0.25f,  // D1

    -0.1928f, -0.32983f, 0.25f,  // D1
    -0.08f, -0.21f, 0.25f,  // W
    -0.21048f, -0.26604f, 0.25f,  // E1

    -0.21048f, -0.26604f, 0.25f,  // E1
    -0.08f, -0.21f, 0.25f,  // W
    -0.09f, -0.15f, 0.25f,  // Z

    -0.21048f, -0.26604f, 0.25f,  // E1
    -0.09f, -0.15f, 0.25f,  // Z
    -0.09f, -0.09f, 0.25f, // F1

    -0.21048f, -0.26604f, 0.25f,  // E1
    -0.09f, -0.09f, 0.25f, // F1
    -0.07713f, -0.01908f, 0.25f,  // G1

    -0.21048f, -0.26604f, 0.25f,  // E1
    -0.07713f, -0.01908f, 0.25f,  // G1
    -0.21554f, -0.19592f, 0.25f,  // S2

    -0.21554f, -0.19592f, 0.25f,  // S2
    -0.20814f, -0.10819f, 0.25f,  // I1
    -0.07713f, -0.01908f, 0.25f,  // G1

    -0.20814f, -0.10819f, 0.25f,  // I1
    -0.07713f, -0.01908f, 0.25f,  // G1
    -0.19483f, -0.04312f, 0.25f,  // J1

    -0.19483f, -0.04312f, 0.25f,  // J1
    -0.07713f, -0.01908f, 0.25f,  // G1
    -0.06025f, 0.06558f, 0.25f,  // H1

    -0.19483f, -0.04312f, 0.25f,  // J1
    -0.06025f, 0.06558f, 0.25f,  // H1
    -0.17043f, 0.0397f, 0.25f,  // K1

    -0.17043f, 0.0397f, 0.25f,  // K1
    -0.06025f, 0.06558f, 0.25f,  // H1
    -0.15f, 0.11f, 0.25f,  // L1

    -0.06025f, 0.06558f, 0.25f,  // H1
    -0.03f, 0.15f, 0.25f, // M1
    -0.15f, 0.11f, 0.25f,  // L1

    -0.15f, 0.11f, 0.25f,  // L1
    -0.03f, 0.15f, 0.25f, // M1
    0.01f, 0.23f, 0.25f,  // N1

    -0.15f, 0.11f, 0.25f,  // L1
    0.01f, 0.23f, 0.25f,  // N1
    0.06f, 0.31f, 0.25f,  // O1


    -0.15f, 0.11f, 0.25f,  // L1
    0.06f, 0.31f, 0.25f,  // O1
    -0.12f, 0.18f, 0.25f,  // H2

    -0.12f, 0.18f, 0.25f,  // H2
    0.06f, 0.31f, 0.25f,  // O1
    -0.09f, 0.23f, 0.25f,  // F2

    -0.09f, 0.23f, 0.25f,  // F2
    0.06f, 0.31f, 0.25f,  // O1
    -0.04f, 0.3f, 0.25f,  // G2

    -0.04f, 0.3f, 0.25f,  // G2
    0.06f, 0.31f, 0.25f,  // O1
    -0.0f, 0.35f, 0.25f, // Q1

    -0.0f, 0.35f, 0.25f, // Q1
    0.06f, 0.31f, 0.25f, // O1
    0.12f, 0.38f, 0.25f,  // P1

    -0.0f, 0.35f, 0.25f, // Q1
    0.12f, 0.38f, 0.25f,  // P1
    0.07f, 0.42f, 0.25f,  // R1

    0.07f, 0.42f, 0.25f,  // R1
    0.12f, 0.38f, 0.25f,  // P1
    0.25f, 0.51f, 0.25f,  // U1

    0.07f, 0.42f, 0.25f,  // R1
    0.25f, 0.51f, 0.25f,  // U1
    0.15f, 0.5f, 0.25f,  // S1

    0.15f, 0.5f, 0.25f,  // S1
    0.25f, 0.51f, 0.25f,  // U1
    0.23f, 0.58f, 0.25f,  // T1

    0.23f, 0.58f, 0.25f,  // T1
    0.25f, 0.51f, 0.25f,  // U1
    0.31f, 0.56f, 0.25f,  // V1

    0.31f, 0.56f, 0.25f,  // V1
    0.37f, 0.60f, 0.25f,  // O2
    0.23f, 0.58f, 0.25f,  // T1

    0.37f, 0.60f, 0.25f,  // O2
    0.43f, 0.63f, 0.25f,  // W1
    0.23f, 0.58f, 0.25f,  // T1

    0.43f, 0.63f, 0.25f,  // W1
    0.43f, 0.65f, 0.25f,  // Z1
    0.23f, 0.58f, 0.25f,  // T1*/

    0.43f, 0.65f, 0.25f,  // Z1
    0.29f, 0.64f, 0.25f,  // I2
    0.23f, 0.58f, 0.25f,  // T1

    0.29f, 0.64f, 0.25f,  // I2
    0.23f, 0.59f, 0.25f,  // J2
    0.23f, 0.58f, 0.25f,  // T1

    0.29f, 0.64f, 0.25f,  // I2
    0.22f, 0.6f, 0.25f,  // K2
    0.23f, 0.59f, 0.25f,  // J2

    0.29f, 0.64f, 0.25f,  // I2
    0.19f, 0.61f, 0.25f,  // L2
    0.22f, 0.6f, 0.25f,  // K2

    0.19f, 0.61f, 0.25f,  // L2
    0.29f, 0.64f, 0.25f,  // I2
    0.14f, 0.62f, 0.25f,  // M2

    0.29f, 0.64f, 0.25f,  // I2
    0.21f, 0.65f, 0.25f,  // A2
    0.14f, 0.62f, 0.25f,  // M2

    0.21f, 0.65f, 0.25f,  // A2
    0.14f, 0.67f, 0.25f,  // N2
    0.14f, 0.62f, 0.25f,  // M2

    0.14f, 0.67f, 0.25f,  // N2
    0.09f, 0.69f, 0.25f,  // B2
    0.14f, 0.62f, 0.25f,  // M2

    0.14f, 0.62f, 0.25f,  // M2
    0.09f, 0.69f, 0.25f,  // B2
    0.05f, 0.64f, 0.25f,  // E2

    0.05f, 0.64f, 0.25f,  // E2
    0.09f, 0.69f, 0.25f,  // B2
    0.03f, 0.72f, 0.25f,  // C2

    0.05f, 0.64f, 0.25f,  // E2
    0.03f, 0.72f, 0.25f,  // C2
    -0.03f, 0.66f, 0.25f,  // D2

    /////////////////////////////////////////////////////
    /////////////////////////////////////////////////////

    0.03f, 0.72f, 0.0f,  // C2
    -0.03f, 0.66f, 0.0f,  // D2
    -0.03f, 0.66f, 0.25f,  // D2P

     0.03f, 0.72f, 0.0f,  // C2
    0.03f, 0.72f, 0.25f,  // C2P
    -0.03f, 0.66f, 0.25f,  // D2P

     0.03f, 0.72f, 0.0f,  // C2
     0.09f, 0.69f, 0.0f,  // B2
     0.09f, 0.69f, 0.25f,  // B2P

     0.09f, 0.69f, 0.25f,  // B2P
     0.03f, 0.72f, 0.25f,  // C2
     0.03f, 0.72f, 0.0f,  // C2

     0.09f, 0.69f, 0.0f,  // B2
     0.14f, 0.67f, 0.0f,  // N2
     0.14f, 0.67f, 0.25f,  // N2P

     0.14f, 0.67f, 0.25f,  // N2P
     0.09f, 0.69f, 0.25f,  // B2P
     0.09f, 0.69f, 0.0f,  // B2

     0.14f, 0.67f, 0.0f,  // N2
     0.21f, 0.65f, 0.0f,  // A2
     0.21f, 0.65f, 0.25f,  // A2

     0.21f, 0.65f, 0.25f,  // A2P
     0.14f, 0.67f, 0.25f,  // N2P
     0.14f, 0.67f, 0.0f,  // 
     
     0.21f, 0.65f, 0.0f,  // A2
     0.29f, 0.64f, 0.0f,  // I2
     0.29f, 0.64f, 0.25f,  // I2P

     0.29f, 0.64f, 0.25f,  // I2P
     0.21f, 0.65f, 0.25f,  // A2P
     0.21f, 0.65f, 0.0f,  // A2

     0.29f, 0.64f, 0.0f,  // I2
     0.43f, 0.65f, 0.0f,  // Z1
     0.43f, 0.65f, 0.25f,  // Z1P

     0.43f, 0.65f, 0.25f,  // Z1P
     0.29f, 0.64f, 0.25f,  // I2P
     0.29f, 0.64f, 0.0f,  // I2

    0.43f, 0.65f, 0.0f,  // Z1
    0.43f, 0.63f, 0.0f,  // W1
    0.43f, 0.63f, 0.25f,  // W1P

    0.43f, 0.63f, 0.25f,  // W1P
    0.43f, 0.65f, 0.25f,  // Z1P
    0.43f, 0.65f, 0.0f,  // Z1

    -0.03f, 0.66f, 0.0f,  // D2
    0.05f, 0.64f, 0.0f,  // E2
    0.05f, 0.64f, 0.25f,  // E2P

    0.05f, 0.64f, 0.25f,  // E2P
    -0.03f, 0.66f, 0.25f,  // D2
    -0.03f, 0.66f, 0.0f,  // D2

    0.05f, 0.64f, 0.0f,  // E2
    0.14f, 0.62f, 0.0f,  // M2
    0.14f, 0.62f, 0.25f,  // M2P

    0.14f, 0.62f, 0.25f,  // M2P
    0.05f, 0.64f, 0.25f,  // E2
    0.05f, 0.64f, 0.0f,  // E2

    0.14f, 0.62f, 0.0f,  // M2
    0.19f, 0.61f, 0.0f,  // L2
    0.19f, 0.61f, 0.25f,  // L2P

    0.19f, 0.61f, 0.25f,  // L2P
    0.14f, 0.62f, 0.25f,  // M2P
    0.14f, 0.62f, 0.0f,  // M2

    0.19f, 0.61f, 0.0f,  // L2
    0.22f, 0.6f, 0.0f,  // K2
    0.22f, 0.6f, 0.25f,  // K2P

    0.22f, 0.6f, 0.25f,  // K2P
    0.19f, 0.61f, 0.25f,  // L2P
    0.19f, 0.61f, 0.0f,  // L2

    0.22f, 0.6f, 0.0f,  // K2
    0.23f, 0.59f, 0.0f,  // J2
    0.23f, 0.59f, 0.25f,  // J2P

    0.23f, 0.59f, 0.25f,  // J2P
    0.22f, 0.6f, 0.25f,  // K2P
    0.22f, 0.6f, 0.0f,  // K2

    0.23f, 0.59f, 0.0f,  // J2
    0.23f, 0.58f, 0.0f,  // T1
    0.23f, 0.58f, 0.25f,  // T1P

    0.23f, 0.58f, 0.25f,  // T1P
    0.23f, 0.59f, 0.25f,  // J2P
    0.23f, 0.59f, 0.0f,  // J2

    0.37f, 0.60f, 0.0f,  // O2
    0.43f, 0.63f, 0.0f,  // W1
    0.43f, 0.63f, 0.25f,  // W1P

    0.43f, 0.63f, 0.25f,  // W1P
    0.37f, 0.60f, 0.25f,  // O2P
    0.37f, 0.60f, 0.0f,  // O2

    0.37f, 0.60f, 0.0f,  // O2
    0.31f, 0.56f, 0.0f,  // V1
    0.31f, 0.56f, 0.25f,  // V1P

    0.31f, 0.56f, 0.25f,  // V1P
    0.37f, 0.60f, 0.25f,  // O2P
    0.37f, 0.60f, 0.0f,  // O2

    0.31f, 0.56f, 0.0f,  // V1
    0.25f, 0.51f, 0.0f,  // U1
    0.25f, 0.51f, 0.25f,  // U1P

    0.25f, 0.51f, 0.25f,  // U1P
    0.31f, 0.56f, 0.25f,  // V1P
    0.31f, 0.56f, 0.0f,  // V1

    0.25f, 0.51f, 0.0f,  // U1
    0.12f, 0.38f, 0.0f,  // P1
    0.12f, 0.38f, 0.25f,  // P1P

    0.12f, 0.38f, 0.25f,  // P1P
    0.25f, 0.51f, 0.25f,  // U1P
    0.25f, 0.51f, 0.0f,  // U1

    0.12f, 0.38f, 0.0f,  // P1
    0.06f, 0.31f, 0.0f,  // O1
    0.06f, 0.31f, 0.25f,  // O1P

    0.06f, 0.31f, 0.25f,  // O1P
    0.12f, 0.38f, 0.25f,  // P1P
    0.12f, 0.38f, 0.0f,  // P1

    0.06f, 0.31f, 0.0f,  // O1
    0.01f, 0.23f, 0.0f,  // N1
    0.01f, 0.23f, 0.25f,  // N1P

    0.01f, 0.23f, 0.25f,  // N1P
    0.06f, 0.31f, 0.25f,  // O1P
    0.06f, 0.31f, 0.0f,  // O1

    0.01f, 0.23f, 0.0f,  // N1
    -0.03f, 0.15f, 0.0f, // M1
    -0.03f, 0.15f, 0.25f, // M1P

    -0.03f, 0.15f, 0.25f, // M1P
    0.01f, 0.23f, 0.25f,  // N1P
    0.01f, 0.23f, 0.0f,  // N1

    -0.03f, 0.15f, 0.0f, // M1
    -0.06025f, 0.06558f, 0.0f,  // H1
    -0.06025f, 0.06558f, 0.25f,  // H1P

    -0.06025f, 0.06558f, 0.25f,  // H1P
    -0.03f, 0.15f, 0.25f, // M1P
    -0.03f, 0.15f, 0.0f, // M1

    -0.06025f, 0.06558f, 0.0f,  // H1
    -0.07713f, -0.01908f, 0.0f,  // G1
    -0.07713f, -0.01908f, 0.25f,  // G1P

    -0.07713f, -0.01908f, 0.25f,  // G1P
    -0.06025f, 0.06558f, 0.25f,  // H1P
    -0.06025f, 0.06558f, 0.0f,  // H1

    -0.07713f, -0.01908f, 0.0f,  // G1
    -0.09f, -0.09f, 0.0f, // F1
    -0.09f, -0.09f, 0.25f, // F1P

    -0.09f, -0.09f, 0.25f, // F1P
    -0.07713f, -0.01908f, 0.25f,  // G1P
    -0.07713f, -0.01908f, 0.0f,  // G1

    -0.09f, -0.09f, 0.0f, // F1
    -0.09f, -0.15f, 0.0f,  // Z
    -0.09f, -0.15f, 0.25f,  // ZP

    -0.09f, -0.15f, 0.25f,  // ZP
    -0.09f, -0.09f, 0.25f, // F1P
    -0.09f, -0.09f, 0.0f, // F1

    -0.09f, -0.15f, 0.0f,  // Z
    -0.08f, -0.21f, 0.0f,  // W
    -0.08f, -0.21f, 0.25f,  // WP

    -0.08f, -0.21f, 0.25f,  // WP
    -0.09f, -0.15f, 0.25f,  // ZP
    -0.09f, -0.15f, 0.0f,  // Z

    -0.08f, -0.21f, 0.0f,  // W
    -0.05f, -0.28f, 0.0f,  // V
    -0.05f, -0.28f, 0.25f,  // VP

    -0.05f, -0.28f, 0.25f,  // VP
    -0.08f, -0.21f, 0.25f,  // WP
    -0.08f, -0.21f, 0.0f,  // W

    -0.05f, -0.28f, 0.0f,  // V
    -0.01f, -0.33f, 0.0f,  // U
    -0.01f, -0.33f, 0.25f,  // UP

    -0.01f, -0.33f, 0.25f,  // UP
    -0.05f, -0.28f, 0.25f,  // VP
    -0.05f, -0.28f, 0.0f,  // V

    -0.01f, -0.33f, 0.0f,  // U
    0.06f, -0.37f, 0.0f,  // T
    0.06f, -0.37f, 0.25f,  // TP

    0.06f, -0.37f, 0.25f,  // TP
    -0.01f, -0.33f, 0.25f,  // UP
    0-0.01f, -0.33f, 0.0f,  // U

    0.06f, -0.37f, 0.0f,  // T
    0.12609f, -0.38548f, 0.0f, // Q
    0.12609f, -0.38548f, 0.25f, // QP

    0.12609f, -0.38548f, 0.25f, // QP
    0.06f, -0.37f, 0.25f,  // TP
    0.06f, -0.37f, 0.0f,  // T

    0.12609f, -0.38548f, 0.0f, // Q
    0.2f, -0.39f, 0.0f,  // P
    0.2f, -0.39f, 0.25f,  // PP

    0.2f, -0.39f, 0.25f,  // PP
    0.12609f, -0.38548f, 0.25f, // QP
    0.12609f, -0.38548f, 0.0f, // Q

    0.2f, -0.39f, 0.0f,  // P
    0.27f, -0.39f, 0.0f,  // O
    0.27f, -0.39f, 0.25f,  // OP

    0.27f, -0.39f, 0.25f,  // OP
    0.2f, -0.39f, 0.25f,  // PP
    0.2f, -0.39f, 0.0f,  // P

    0.27f, -0.39f, 0.0f,  // O
    0.35f, -0.39f, 0.0f,  // N
    0.35f, -0.39f, 0.25f,  // NP

    0.35f, -0.39f, 0.25f,  // NP
    0.27f, -0.39f, 0.25f,  // OP
    0.27f, -0.39f, 0.0f,  // O

    0.35f, -0.39f, 0.0f,  // N
    0.41933f, -0.39327f, 0.0f,  // M
    0.41933f, -0.39327f, 0.25f,  // MP

    0.41933f, -0.39327f, 0.25f,  // MP
    0.35f, -0.39f, 0.25f,  // NP
    0.35f, -0.39f, 0.0f,  // N

    0.41933f, -0.39327f, 0.0f,  // M
    0.44726f, -0.40741f, 0.0f,  // L
    0.44726f, -0.40741f, 0.25f,  // LP

    0.44726f, -0.40741f, 0.25f,  // LP
    0.41933f, -0.39327f, 0.25f,  // MP
    0.41933f, -0.39327f, 0.0f,  // M

    0.44726f, -0.40741f, 0.0f,  // L
    0.46293f, -0.43321f, 0.0f,  // P2
    0.46293f, -0.43321f, 0.25f,  // P2P

    0.46293f, -0.43321f, 0.25f,  // P2P
    0.44726f, -0.40741f, 0.25f,  // LP
    0.44726f, -0.40741f, 0.0f,  // L

    0.46293f, -0.43321f, 0.0f,  // P2
    0.46984f, -0.47744f, 0.0f,  // J
    0.46984f, -0.47744f, 0.25f,  // JP

    0.46984f, -0.47744f, 0.25f,  // JP
    0.46293f, -0.43321f, 0.25f,  // P2P
    0.46293f, -0.43321f, 0.0f,  // P2

    0.46984f, -0.47744f, 0.0f,  // J
    0.4656f, -0.53165f, 0.0f, // H
    0.4656f, -0.53165f, 0.25f, // HP

    0.4656f, -0.53165f, 0.25f, // HP
    0.46984f, -0.47744f, 0.25f,  // JP
    0.46984f, -0.47744f, 0.0f,  // J

    0.4656f, -0.53165f, 0.0f, // H
    0.44798f, -0.58286, 0.0f, // F
    0.44798f, -0.58286, 0.25f, // FP

    0.44798f, -0.58286, 0.25f, // FP
    0.4656f, -0.53165f, 0.25f, // HP
    0.4656f, -0.53165f, 0.0f, // H

    0.44798f, -0.58286, 0.0f, // F
    0.41399f, -0.64194, 0.0f, // Q2
    0.41399f, -0.64194, 0.25f, // Q2P

    0.41399f, -0.64194, 0.25f, // Q2P
    0.44798f, -0.58286, 0.25f, // FP
    0.44798f, -0.58286, 0.0f, // F

    0.41399f, -0.64194, 0.0f, // Q2
    0.37231f, -0.70344, 0.0f, // D
    0.37231f, -0.70344, 0.25f, // DP

    0.37231f, -0.70344, 0.25f, // DP
    0.41399f, -0.64194, 0.25f, // Q2P
    0.41399f, -0.64194, 0.0f, // Q2

    0.37231f, -0.70344, 0.0f, // D
    0.33f, -0.68f, 0.0f, // C
    0.33f, -0.68f, 0.25f, // CP

    0.33f, -0.68f, 0.25f, // CP
    0.37231f, -0.70344, 0.25f, // DP
    0.37231f, -0.70344, 0.0f, // D

    0.33f, -0.68f, 0.0f, // C
    0.35637f, -0.62304f, 0.0f,  // G
    0.35637f, -0.62304f, 0.25f,  // GP

    0.35637f, -0.62304f, 0.25f,  // GP
    0.33f, -0.68f, 0.25f, // CP
    0.33f, -0.68f, 0.0f, // C

    0.35637f, -0.62304f, 0.0f,  // G
    0.37029f, -0.57873f, 0.0f,  // R2
    0.37029f, -0.57873f, 0.25f,  // R2P

    0.37029f, -0.57873f, 0.25f,  // R2P
    0.35637f, -0.62304f, 0.25f,  // GP
    0.35637f, -0.62304f, 0.0f,  // G

    0.37029f, -0.57873f, 0.0f,  // R2
    0.37245f, -0.54042f, 0.0f,  // E
    0.37245f, -0.54042f, 0.25f,  // EP

    0.37245f, -0.54042f, 0.25f,  // EP
    0.37029f, -0.57873f, 0.25f,  // R2P
    0.37029f, -0.57873f, 0.0f,  // R2

    0.37245f, -0.54042f, 0.0f,  // E
    0.36179f, -0.51436f, 0.0f,  // I
    0.36179f, -0.51436f, 0.25f,  // IP

    0.36179f, -0.51436f, 0.25f,  // IP
    0.37245f, -0.54042f, 0.25f,  // EP
    0.37245f, -0.54042f, 0.0f,  // E

    0.36179f, -0.51436f, 0.0f,  // I
    0.33698f, -0.49905f, 0.0f,  // K
    0.33698f, -0.49905f, 0.25f,  // KP

    0.33698f, -0.49905f, 0.25f,  // KP
    0.36179f, -0.51436f, 0.25f,  // IP
    0.36179f, -0.51436f, 0.0f,  // I

    0.33698f, -0.49905f, 0.0f,  // K
    0.13777f, -0.4858f, 0.0f,  // R
    0.13777f, -0.4858f, 0.25f,  // RP

    0.13777f, -0.4858f, 0.25f,  // RP
    0.33698f, -0.49905f, 0.25f,  // KP
    0.33698f, -0.49905f, 0.0f,  // K

    0.13777f, -0.4858f, 0.0f,  // R
    0.02499f, -0.47678, 0.0f, // A1
    0.02499f, -0.47678, 0.25f, // A1P

    0.02499f, -0.47678, 0.25f, // A1P
    0.13777f, -0.4858f, 0.25f,  // RP
    0.13777f, -0.4858f, 0.0f,  // R

    0.02499f, -0.47678, 0.0f, // A1
    -0.04298f, -0.46057f, 0.0f,  // B1
    -0.04298f, -0.46057f, 0.25f,  // B1P

    -0.04298f, -0.46057f, 0.25f,  // B1P
    0.02499f, -0.47678, 0.25f, // A1P
    0.02499f, -0.47678, 0.0f, // A1

    -0.04298f, -0.46057f, 0.0f,  // B1
    -0.10207f, -0.43756f, 0.0f,  // S
    -0.10207f, -0.43756f, 0.25f,  // SP

    -0.10207f, -0.43756f, 0.25f,  // SP
    -0.04298f, -0.46057f, 0.25f,  // B1P
    -0.04298f, -0.46057f, 0.0f,  // B1

    -0.10207f, -0.43756f, 0.0f,  // S
    -0.15644f, -0.38685f, 0.0f,  // C1
    -0.15644f, -0.38685f, 0.25f,  // C1P

    -0.15644f, -0.38685f, 0.25f,  // C1P
    -0.10207f, -0.43756f, 0.25f,  // SP
    -0.10207f, -0.43756f, 0.0f,  // S

    -0.15644f, -0.38685f, 0.0f,  // C1
    -0.1928f, -0.32983f, 0.0f,  // D1
    -0.1928f, -0.32983f, 0.25f,  // D1P

    -0.1928f, -0.32983f, 0.25f,  // D1P
    -0.15644f, -0.38685f, 0.25f,  // C1P
    -0.15644f, -0.38685f, 0.0f,  // C1

    -0.1928f, -0.32983f, 0.0f,  // D1
    -0.21048f, -0.26604f, 0.0f,  // E1
    -0.21048f, -0.26604f, 0.25f,  // E1P

    -0.21048f, -0.26604f, 0.25f,  // E1P
    -0.1928f, -0.32983f, 0.25f,  // D1P
    -0.1928f, -0.32983f, 0.0f,  // D1

    -0.21048f, -0.26604f, 0.0f,  // E1
    -0.21554f, -0.19592f, 0.0f,  // S2
    -0.21554f, -0.19592f, 0.25f,  // S2P

    -0.21554f, -0.19592f, 0.25f,  // S2P
    -0.21048f, -0.26604f, 0.25f,  // E1P
    -0.21048f, -0.26604f, 0.0f,  // E1

    -0.21554f, -0.19592f, 0.0f,  // S2
    -0.20814f, -0.10819f, 0.0f,  // I1
    -0.20814f, -0.10819f, 0.25f,  // I1P

    -0.20814f, -0.10819f, 0.25f,  // I1P
    -0.21554f, -0.19592f, 0.25f,  // S2P
    -0.21554f, -0.19592f, 0.0f,  // S2

    -0.20814f, -0.10819f, 0.0f,  // I1
    -0.19483f, -0.04312f, 0.0f,  // J1
    -0.19483f, -0.04312f, 0.25f,  // J1P

    -0.19483f, -0.04312f, 0.25f,  // J1P
    -0.20814f, -0.10819f, 0.25f,  // I1P
    -0.20814f, -0.10819f, 0.0f,  // I1

    -0.19483f, -0.04312f, 0.0f,  // J1
    -0.17043f, 0.0397f, 0.0f,  // K1
    -0.17043f, 0.0397f, 0.25f,  // K1P

    -0.17043f, 0.0397f, 0.25f,  // K1P
    -0.19483f, -0.04312f, 0.25f,  // J1P
    -0.19483f, -0.04312f, 0.0f,  // J1

    -0.17043f, 0.0397f, 0.0f,  // K1
    -0.15f, 0.11f, 0.0f,  // L1
    -0.15f, 0.11f, 0.25f,  // L1P

    -0.15f, 0.11f, 0.25f,  // L1P
    -0.17043f, 0.0397f, 0.25f,  // K1P
    -0.17043f, 0.0397f, 0.0f,  // K1

    -0.15f, 0.11f, 0.0f,  // L1
    -0.12f, 0.18f, 0.0f,  // H2
    -0.12f, 0.18f, 0.25f,  // H2P

    -0.12f, 0.18f, 0.25f,  // H2P
    -0.15f, 0.11f, 0.25f,  // L1P
    -0.15f, 0.11f, 0.0f,  // L1

    -0.12f, 0.18f, 0.0f,  // H2
    -0.09f, 0.23f, 0.0f,  // F2
    -0.09f, 0.23f, 0.25f,  // F2P

    -0.09f, 0.23f, 0.25f,  // F2P
    -0.12f, 0.18f, 0.25f,  // H2P
    -0.12f, 0.18f, 0.0f,  // H2

    -0.09f, 0.23f, 0.0f,  // F2
    -0.04f, 0.3f, 0.0f,  // G2
    -0.04f, 0.3f, 0.25f,  // G2P

    -0.04f, 0.3f, 0.25f,  // G2P
    -0.09f, 0.23f, 0.25f,  // F2P
    -0.09f, 0.23f, 0.0f,  // F2

    -0.04f, 0.3f, 0.0f,  // G2
    -0.0f, 0.35f, 0.0f, // Q1
    -0.0f, 0.35f, 0.25f, // Q1P

    -0.0f, 0.35f, 0.25f, // Q1P
    -0.04f, 0.3f, 0.25f,  // G2P
    -0.04f, 0.3f, 0.0f,  // G2

    -0.0f, 0.35f, 0.0f, // Q1
    0.07f, 0.42f, 0.0f,  // R1
    0.07f, 0.42f, 0.25f,  // R1P

    0.07f, 0.42f, 0.25f,  // R1P
    0.0f, 0.35f, 0.25f, // Q1P
    -0.0f, 0.35f, 0.0f, // Q1

    0.07f, 0.42f, 0.0f,  // R1
    0.15f, 0.5f, 0.0f,  // S1
    0.15f, 0.5f, 0.25f,  // S1P

    0.15f, 0.5f, 0.25f,  // S1P
    0.07f, 0.42f, 0.25f,  // R1P
    0.07f, 0.42f, 0.0f,  // R1

    0.15f, 0.5f, 0.0f,  // S1
    0.23f, 0.58f, 0.0f,  // T1
    0.23f, 0.58f, 0.25f,  // T1P

    0.23f, 0.58f, 0.25f,  // T1P
    0.15f, 0.5f, 0.25f,  // S1P
    0.15f, 0.5f, 0.0f,  // S1


};

static const float colors[] = {
	0.7882f, 0.7917f, 0.9608f, 
	0.6071f, 0.2812f, 0.6992f, 
	0.5097f, 0.3279f, 0.7945f, 
	0.9914f, 0.1038f, 0.1304f, 
	0.8451f, 0.2533f, 0.1344f, 
	0.7757f, 0.9659f, 0.6158f, 
	0.4191f, 0.4631f, 0.4524f, 
	0.4322f, 0.0352f, 0.8845f, 
	0.5968f, 0.8208f, 0.6069f, 
	0.0453f, 0.7388f, 0.9218f, 
	0.2502f, 0.0346f, 0.7901f, 
	0.9615f, 0.3839f, 0.5804f, 
	0.3011f, 0.2217f, 0.8526f, 
	0.6878f, 0.0673f, 0.7589f, 
	0.7746f, 0.1308f, 0.8531f, 
	0.6526f, 0.4783f, 0.4553f, 
	0.5103f, 0.0395f, 0.9793f, 
	0.6909f, 0.421f, 0.8156f, 
	0.6033f, 0.1748f, 0.0271f, 
	0.9538f, 0.6184f, 0.0731f, 
	0.7942f, 0.8381f, 0.014f, 
	0.9619f, 0.2484f, 0.4319f, 
	0.8066f, 0.8655f, 0.7461f, 
	0.5381f, 0.6369f, 0.1951f, 
	0.3814f, 0.5004f, 0.8146f, 
	0.9108f, 0.9625f, 0.838f, 
	0.0413f, 0.4453f, 0.8373f, 
	0.1323f, 0.5019f, 0.2223f, 
	0.1254f, 0.0129f, 0.0934f, 
	0.2593f, 0.9361f, 0.7835f, 
	0.8851f, 0.4563f, 0.2804f, 
	0.9998f, 0.5654f, 0.367f, 
	0.2266f, 0.8967f, 0.0619f, 
	0.9959f, 0.127f, 0.8447f, 
	0.1341f, 0.9055f, 0.1727f, 
	0.6457f, 0.734f, 0.0541f, 
	0.0322f, 0.9495f, 0.168f, 
	0.0308f, 0.8071f, 0.4166f, 
	0.1201f, 0.435f, 0.5313f, 
	0.5887f, 0.2253f, 0.003f, 
	0.5439f, 0.2003f, 0.838f, 
	0.0854f, 0.635f, 0.0103f, 
	0.667f, 0.823f, 0.447f, 
	0.9024f, 0.8174f, 0.4548f, 
	0.4293f, 0.4307f, 0.2139f, 
	0.8831f, 0.8025f, 0.577f, 
	0.0326f, 0.0147f, 0.3639f, 
	0.4405f, 0.0957f, 0.4094f, 
	0.8224f, 0.4243f, 0.9321f, 
	0.0762f, 0.0005f, 0.2001f, 
	0.4726f, 0.6713f, 0.4614f, 
	0.3648f, 0.0498f, 0.1227f, 
	0.6079f, 0.3441f, 0.296f, 
	0.2204f, 0.9085f, 0.7148f, 
	0.4511f, 0.7447f, 0.6477f, 
	0.6836f, 0.0545f, 0.1219f, 
	0.0132f, 0.8671f, 0.1129f, 
	0.5521f, 0.7199f, 0.3668f, 
	0.0644f, 0.2628f, 0.2458f, 
	0.0174f, 0.7501f, 0.1375f, 
	0.1172f, 0.3966f, 0.5407f, 
	0.9433f, 0.6665f, 0.9162f, 
	0.5824f, 0.1965f, 0.3002f, 
	0.7676f, 0.5003f, 0.9744f, 
	0.1846f, 0.7607f, 0.3095f, 
	0.2423f, 0.8203f, 0.0302f, 
	0.5369f, 0.6575f, 0.113f, 
	0.7652f, 0.818f, 0.7525f, 
	0.7026f, 0.9257f, 0.888f, 
	0.4724f, 0.4286f, 0.3014f, 
	0.9781f, 0.1277f, 0.6691f, 
	0.0726f, 0.7394f, 0.7693f, 
	0.6991f, 0.9759f, 0.3013f, 
	0.9321f, 0.2908f, 0.0679f, 
	0.5977f, 0.6616f, 0.0138f, 
	0.194f, 0.1434f, 0.6559f, 
	0.8032f, 0.8359f, 0.1733f, 
	0.6851f, 0.5661f, 0.6717f, 
	0.474f, 0.8021f, 0.0968f, 
	0.9738f, 0.8732f, 0.375f, 
	0.4706f, 0.9065f, 0.9646f, 
	0.2918f, 0.401f, 0.8593f, 
	0.478f, 0.5707f, 0.7989f, 
	0.6955f, 0.5673f, 0.1834f, 
	0.6842f, 0.2009f, 0.7729f, 
	0.53f, 0.0711f, 0.9347f, 
	0.3681f, 0.3936f, 0.2985f, 
	0.8166f, 0.9836f, 0.9848f, 
	0.3846f, 0.5837f, 0.4539f, 
	0.1897f, 0.5761f, 0.3067f, 
	0.4521f, 0.4677f, 0.3939f, 
	0.8641f, 0.148f, 0.9405f, 
	0.068f, 0.461f, 0.549f, 
	0.4088f, 0.9045f, 0.1413f, 
	0.7453f, 0.5174f, 0.2606f, 
	0.4279f, 0.9531f, 0.3722f, 
	0.3427f, 0.2675f, 0.6174f, 
	0.1552f, 0.5952f, 0.0627f, 
	0.1239f, 0.6801f, 0.9409f, 
	0.5795f, 0.3403f, 0.7098f, 
	0.8695f, 0.6279f, 0.1752f, 
	0.6896f, 0.6908f, 0.2391f, 
	0.1512f, 0.7065f, 0.2249f, 
	0.1631f, 0.5963f, 0.6934f, 
	0.8837f, 0.2639f, 0.4096f, 
	0.6111f, 0.7112f, 0.3235f, 
	0.571f, 0.9115f, 0.7984f, 
	0.778f, 0.4901f, 0.9524f, 
	0.2927f, 0.5695f, 0.6223f, 
	0.0282f, 0.8154f, 0.8099f, 
	0.2571f, 0.9459f, 0.8396f, 
	0.8763f, 0.427f, 0.0203f, 
	0.0082f, 0.7418f, 0.4752f, 
	0.5737f, 0.8293f, 0.3143f, 
	0.2736f, 0.5705f, 0.52f, 
	0.9347f, 0.1381f, 0.5766f, 
	0.1849f, 0.4732f, 0.4358f, 
	0.8441f, 0.3506f, 0.9607f, 
	0.4446f, 0.9976f, 0.0711f, 
	0.919f, 0.7899f, 0.6485f, 
	0.6235f, 0.7752f, 0.2804f, 
	0.3343f, 0.7647f, 0.1167f, 
	0.3426f, 0.254f, 0.5666f, 
	0.4524f, 0.8014f, 0.717f, 
	0.7057f, 0.2066f, 0.9362f, 
	0.3646f, 0.6354f, 0.5631f, 
	0.1969f, 0.2192f, 0.457f, 
	0.9774f, 0.3723f, 0.2059f, 
	0.8471f, 0.8025f, 0.328f, 
	0.9636f, 0.8314f, 0.5315f, 
	0.8122f, 0.5618f, 0.5607f, 
	0.5452f, 0.8545f, 0.8249f, 
	0.9604f, 0.0435f, 0.6937f, 
	0.2001f, 0.5421f, 0.6824f, 
	0.2233f, 0.0001f, 0.5771f, 
	0.7845f, 0.4956f, 0.8049f, 
	0.2046f, 0.4759f, 0.0957f, 
	0.5962f, 0.608f, 0.2145f, 
	0.5601f, 0.3399f, 0.3567f, 
	0.0944f, 0.2998f, 0.2119f, 
	0.9318f, 0.4885f, 0.8416f, 
	0.0999f, 0.44f, 0.8997f, 
	0.671f, 0.4615f, 0.7465f, 
	0.772f, 0.0763f, 0.5506f, 
	0.2146f, 0.1794f, 0.2132f, 
	0.1672f, 0.801f, 0.997f, 
	0.4319f, 0.6416f, 0.3318f, 
	0.0239f, 0.3623f, 0.3992f, 
	0.0607f, 0.9983f, 0.9828f, 
	0.2073f, 0.7481f, 0.3417f, 
	0.2248f, 0.0025f, 0.3416f, 
	0.2266f, 0.5151f, 0.593f, 
	0.0807f, 0.0324f, 0.5961f, 
	0.949f, 0.2456f, 0.7444f, 
	0.0316f, 0.4313f, 0.2991f, 
	0.0244f, 0.1954f, 0.5697f, 
	0.8417f, 0.8132f, 0.4155f, 
	0.2553f, 0.8213f, 0.0466f, 
	0.5825f, 0.7115f, 0.9441f, 
	0.3752f, 0.2185f, 0.9864f, 
	0.1523f, 0.3069f, 0.5771f, 
	0.5984f, 0.8195f, 0.4045f, 
	0.4374f, 0.7696f, 0.4576f, 
	0.4671f, 0.1812f, 0.1884f, 
	0.2225f, 0.2073f, 0.9133f, 
	0.0584f, 0.6086f, 0.6793f, 
	0.9827f, 0.2822f, 0.1295f, 
	0.591f, 0.0533f, 0.4372f, 
	0.3941f, 0.5813f, 0.2388f, 
	0.6784f, 0.5387f, 0.3719f, 
	0.5417f, 0.9844f, 0.6225f, 
	0.4128f, 0.3522f, 0.1498f, 
	0.1967f, 0.8565f, 0.9969f, 
	0.8875f, 0.5544f, 0.8821f, 
	0.154f, 0.9525f, 0.6801f, 
	0.3643f, 0.9118f, 0.2157f, 
	0.6657f, 0.8204f, 0.9203f, 
	0.3341f, 0.0091f, 0.2271f, 
	0.0541f, 0.1893f, 0.6537f, 
	0.4955f, 0.9008f, 0.555f, 
	0.6901f, 0.4502f, 0.2127f, 
	0.2486f, 0.6815f, 0.0355f, 
	0.4546f, 0.9484f, 0.2126f, 
	0.964f, 0.5744f, 0.8287f, 
	0.7834f, 0.3917f, 0.2112f, 
	0.5472f, 0.8511f, 0.7543f, 
	0.0478f, 0.5724f, 0.1861f, 
	0.6091f, 0.4028f, 0.6401f, 
	0.0494f, 0.9049f, 0.1842f, 
	0.3054f, 0.0359f, 0.4501f, 
	0.0712f, 0.3411f, 0.6606f, 
	0.9419f, 0.7178f, 0.3706f, 
	0.0961f, 0.9574f, 0.1112f, 
	0.5899f, 0.7796f, 0.1051f, 
	0.5343f, 0.1952f, 0.562f, 
	0.3175f, 0.4292f, 0.647f, 
	0.0293f, 0.9887f, 0.1441f, 
	0.8524f, 0.7392f, 0.2231f, 
	0.4558f, 0.1747f, 0.7817f, 
	0.3461f, 0.7491f, 0.0175f, 
	0.3562f, 0.6085f, 0.7426f, 
	0.7201f, 0.2502f, 0.4763f, 
	0.5744f, 0.7661f, 0.3234f, 
	0.6065f, 0.0246f, 0.2476f, 
	0.825f, 0.4146f, 0.1141f, 
	0.1685f, 0.4075f, 0.6031f, 
	0.9089f, 0.4055f, 0.6732f, 
	0.7194f, 0.4096f, 0.9201f, 
	0.9079f, 0.2991f, 0.3005f, 
	0.6105f, 0.3034f, 0.4463f, 
	0.372f, 0.8526f, 0.3703f, 
	0.1545f, 0.8031f, 0.6043f, 
	0.6575f, 0.4908f, 0.4151f, 
	0.0797f, 0.4639f, 0.6064f, 
	0.4477f, 0.7582f, 0.5393f, 
	0.964f, 0.5879f, 0.4624f, 
	0.2015f, 0.4777f, 0.4911f, 
	0.5809f, 0.4109f, 0.9471f, 
	0.4193f, 0.7023f, 0.6245f, 
	0.9666f, 0.4458f, 0.5381f, 
	0.0292f, 0.207f, 0.4818f, 
	0.312f, 0.4974f, 0.429f, 
	0.335f, 0.1283f, 0.6023f, 
	0.3378f, 0.4375f, 0.4219f, 
	0.6127f, 0.1893f, 0.94f, 
	0.9164f, 0.8432f, 0.7098f, 
	0.8235f, 0.8605f, 0.9044f, 
	0.1572f, 0.7369f, 0.1934f, 
	0.1917f, 0.538f, 0.4867f, 
	0.7225f, 0.8451f, 0.865f, 
	0.7194f, 0.0927f, 0.3569f, 
	0.9617f, 0.8671f, 0.2136f, 
	0.9314f, 0.8114f, 0.7479f, 
	0.5507f, 0.4289f, 0.6624f, 
	0.1454f, 0.8491f, 0.5592f, 
	0.3479f, 0.6668f, 0.3986f, 
	0.9154f, 0.7311f, 0.9835f, 
	0.5432f, 0.6824f, 0.3004f, 
	0.332f, 0.2643f, 0.0261f, 
	0.2568f, 0.0638f, 0.0054f, 
	0.4834f, 0.8092f, 0.8769f, 
	0.4181f, 0.1793f, 0.1055f, 
	0.2524f, 0.7562f, 0.0042f, 
	0.9522f, 0.812f, 0.7846f, 
	0.1494f, 0.7633f, 0.6148f, 
	0.7999f, 0.8023f, 0.3033f, 
	0.1531f, 0.8174f, 0.7907f, 
	0.6698f, 0.094f, 0.0422f, 
	0.6554f, 0.312f, 0.1139f, 
	0.9345f, 0.7432f, 0.6327f, 
	0.8862f, 0.6327f, 0.4346f, 
	0.828f, 0.6108f, 0.2071f, 
	0.1474f, 0.5411f, 0.2428f, 
	0.5127f, 0.0612f, 0.4183f, 
	0.144f, 0.7911f, 0.0464f, 
	0.2233f, 0.6183f, 0.1245f, 
	0.3352f, 0.534f, 0.544f, 
	0.8297f, 0.5188f, 0.2748f, 
	0.2912f, 0.5949f, 0.445f, 
	0.6606f, 0.2816f, 0.2026f, 
	0.8481f, 0.5353f, 0.0121f, 
	0.1273f, 0.5623f, 0.0282f, 
	0.394f, 0.593f, 0.0336f, 
	0.4289f, 0.1515f, 0.8306f, 
	0.0871f, 0.0988f, 0.4057f, 
	0.7137f, 0.7776f, 0.6812f, 
	0.6126f, 0.7189f, 0.9847f, 
	0.5236f, 0.1583f, 0.3026f, 
	0.061f, 0.1984f, 0.3138f, 
	0.1033f, 0.1387f, 0.7655f, 
	0.0069f, 0.6376f, 0.8244f, 
	0.4382f, 0.3658f, 0.6051f, 
	0.978f, 0.1575f, 0.7649f, 
	0.9921f, 0.368f, 0.4125f, 
	0.0628f, 0.771f, 0.7711f, 
	0.105f, 0.7217f, 0.097f, 
	0.8729f, 0.6541f, 0.5854f, 
	0.0582f, 0.2332f, 0.546f, 
	0.2619f, 0.4447f, 0.8116f, 
	0.9505f, 0.4204f, 0.5928f, 
	0.5138f, 0.9031f, 0.1257f, 
	0.0541f, 0.0223f, 0.6883f, 
	0.9619f, 0.3849f, 0.7923f, 
	0.5564f, 0.2121f, 0.4317f, 
	0.2431f, 0.2895f, 0.5627f, 
	0.9578f, 0.9039f, 0.5263f, 
	0.1764f, 0.2285f, 0.5829f, 
	0.0341f, 0.3451f, 0.3337f, 
	0.8075f, 0.658f, 0.8375f, 
	0.7462f, 0.4964f, 0.0625f, 
	0.1714f, 0.3204f, 0.7227f, 
	0.6708f, 0.4365f, 0.1874f, 
	0.6186f, 0.3889f, 0.9367f, 
	0.6571f, 0.8902f, 0.1191f, 
	0.0057f, 0.3602f, 0.827f, 
	0.6139f, 0.0783f, 0.7309f, 
	0.113f, 0.9651f, 0.3772f, 
	0.1451f, 0.4635f, 0.9343f, 
	0.2004f, 0.5494f, 0.4608f, 
	0.4806f, 0.7539f, 0.4111f, 
	0.8524f, 0.7434f, 0.9496f, 
	0.276f, 0.3332f, 0.2125f, 
	0.9919f, 0.3114f, 0.654f, 
	0.4734f, 0.9489f, 0.888f, 
	0.7387f, 0.7963f, 0.327f, 
	0.2871f, 0.5718f, 0.2168f, 
	0.1625f, 0.9535f, 0.5276f, 
	0.1103f, 0.2103f, 0.3076f, 
	0.6264f, 0.9211f, 0.4981f, 
	0.2683f, 0.3566f, 0.3515f, 
	0.5855f, 0.8264f, 0.4811f, 
	0.3942f, 0.8746f, 0.0323f, 
	0.0602f, 0.4207f, 0.7718f, 
	0.3217f, 0.9973f, 0.5392f, 
	0.6556f, 0.3819f, 0.5993f, 
	0.526f, 0.9768f, 0.1869f, 
	0.5564f, 0.7607f, 0.6096f, 
	0.5572f, 0.825f, 0.6365f, 
	0.2594f, 0.6856f, 0.4077f, 
	0.903f, 0.5167f, 0.9093f, 
	0.5547f, 0.1116f, 0.3513f, 
	0.7881f, 0.8753f, 0.3785f, 
	0.3928f, 0.0982f, 0.1405f, 
	0.3564f, 0.0194f, 0.4323f, 
	0.0756f, 0.8233f, 0.0875f, 
	0.5695f, 0.3119f, 0.8347f, 
	0.083f, 0.2346f, 0.3761f, 
	0.6901f, 0.3182f, 0.36f, 
	0.4069f, 0.4756f, 0.8732f, 
	0.4403f, 0.8628f, 0.5121f, 
	0.0334f, 0.7684f, 0.0631f, 
	0.7654f, 0.6857f, 0.8787f, 
	0.6773f, 0.3079f, 0.6063f, 
	0.6825f, 0.1409f, 0.8996f, 
	0.4701f, 0.9962f, 0.4682f, 
	0.0137f, 0.383f, 0.098f, 
	0.7611f, 0.0852f, 0.5886f, 
	0.315f, 0.1263f, 0.0223f, 
	0.6864f, 0.8503f, 0.4205f, 
	0.1929f, 0.7407f, 0.1531f, 
	0.6017f, 0.0284f, 0.1742f, 
	0.9002f, 0.6485f, 0.3591f, 
	0.1203f, 0.975f, 0.9168f, 
	0.697f, 0.7273f, 0.2136f, 
	0.5795f, 0.5769f, 0.7876f, 
	0.2654f, 0.6339f, 0.3588f, 
	0.4313f, 0.6727f, 0.7048f, 
	0.9729f, 0.3103f, 0.4699f, 
	0.8112f, 0.6051f, 0.0281f, 
	0.5913f, 0.5067f, 0.1979f, 
	0.7152f, 0.3954f, 0.9512f, 
	0.5538f, 0.565f, 0.0867f, 
	0.5127f, 0.5187f, 0.242f, 
	0.0006f, 0.4785f, 0.2994f, 
	0.0428f, 0.6946f, 0.2699f, 
	0.6197f, 0.7185f, 0.2668f, 
	0.2858f, 0.3763f, 0.1287f, 
	0.7352f, 0.0342f, 0.9989f, 
	0.0158f, 0.9745f, 0.2459f, 
	0.5975f, 0.0023f, 0.3781f, 
	0.7295f, 0.4965f, 0.097f, 
	0.1167f, 0.9833f, 0.0072f, 
	0.2197f, 0.3551f, 0.3755f, 
	0.6147f, 0.2291f, 0.5439f, 
	0.3695f, 0.2936f, 0.7862f, 
	0.3671f, 0.3239f, 0.6488f, 
	0.923f, 0.6137f, 0.3003f, 
	0.9633f, 0.6216f, 0.7418f, 
	0.651f, 0.0367f, 0.8695f, 
	0.122f, 0.14f, 0.0624f, 
	0.9546f, 0.3191f, 0.6565f, 
	0.1822f, 0.4613f, 0.8099f, 
	0.2648f, 0.7555f, 0.9145f, 
	0.8903f, 0.4251f, 0.9031f, 
	0.6369f, 0.6886f, 0.7468f, 
	0.1093f, 0.2053f, 0.165f, 
	0.5292f, 0.4503f, 0.716f, 
	0.7756f, 0.7648f, 0.0776f, 
	0.859f, 0.359f, 0.5667f, 
	0.5912f, 0.146f, 0.0878f, 
	0.9188f, 0.5205f, 0.7148f, 
	0.7045f, 0.1237f, 0.8691f, 
	0.2719f, 0.3949f, 0.7278f, 
	0.9647f, 0.7084f, 0.3348f, 
	0.0403f, 0.5197f, 0.2604f, 
	0.1108f, 0.5333f, 0.8207f, 
	0.3223f, 0.7259f, 0.1456f, 
	0.1365f, 0.9464f, 0.789f, 
	0.1165f, 0.7634f, 0.966f, 
	0.8073f, 0.6037f, 0.6876f, 
	0.5296f, 0.347f, 0.0397f, 
	0.7882f, 0.7917f, 0.9608f, 
	0.6071f, 0.2812f, 0.6992f, 
	0.5097f, 0.3279f, 0.7945f, 
	0.9914f, 0.1038f, 0.1304f, 
	0.8451f, 0.2533f, 0.1344f, 
	0.7757f, 0.9659f, 0.6158f, 
	0.4191f, 0.4631f, 0.4524f, 
	0.4322f, 0.0352f, 0.8845f, 
	0.5968f, 0.8208f, 0.6069f, 
	0.0453f, 0.7388f, 0.9218f, 
	0.2502f, 0.0346f, 0.7901f, 
	0.9615f, 0.3839f, 0.5804f, 
	0.3011f, 0.2217f, 0.8526f, 
	0.6878f, 0.0673f, 0.7589f, 
	0.7746f, 0.1308f, 0.8531f, 
	0.6526f, 0.4783f, 0.4553f, 
	0.5103f, 0.0395f, 0.9793f, 
	0.6909f, 0.421f, 0.8156f, 
	0.6033f, 0.1748f, 0.0271f, 
	0.9538f, 0.6184f, 0.0731f, 
	0.7942f, 0.8381f, 0.014f, 
	0.9619f, 0.2484f, 0.4319f, 
	0.8066f, 0.8655f, 0.7461f, 
	0.5381f, 0.6369f, 0.1951f, 
	0.3814f, 0.5004f, 0.8146f, 
	0.9108f, 0.9625f, 0.838f, 
	0.0413f, 0.4453f, 0.8373f, 
	0.1323f, 0.5019f, 0.2223f, 
	0.1254f, 0.0129f, 0.0934f, 
	0.2593f, 0.9361f, 0.7835f, 
	0.8851f, 0.4563f, 0.2804f, 
	0.9998f, 0.5654f, 0.367f, 
	0.2266f, 0.8967f, 0.0619f, 
	0.9959f, 0.127f, 0.8447f, 
	0.1341f, 0.9055f, 0.1727f, 
	0.6457f, 0.734f, 0.0541f, 
	0.0322f, 0.9495f, 0.168f, 
	0.0308f, 0.8071f, 0.4166f, 
	0.1201f, 0.435f, 0.5313f, 
	0.5887f, 0.2253f, 0.003f, 
	0.5439f, 0.2003f, 0.838f, 
	0.0854f, 0.635f, 0.0103f, 
	0.667f, 0.823f, 0.447f, 
	0.9024f, 0.8174f, 0.4548f, 
	0.4293f, 0.4307f, 0.2139f, 
	0.8831f, 0.8025f, 0.577f, 
	0.0326f, 0.0147f, 0.3639f, 
	0.4405f, 0.0957f, 0.4094f, 
	0.8224f, 0.4243f, 0.9321f, 
	0.0762f, 0.0005f, 0.2001f, 
	0.4726f, 0.6713f, 0.4614f, 
	0.3648f, 0.0498f, 0.1227f, 
	0.6079f, 0.3441f, 0.296f, 
	0.2204f, 0.9085f, 0.7148f, 
	0.4511f, 0.7447f, 0.6477f, 
	0.6836f, 0.0545f, 0.1219f, 
	0.0132f, 0.8671f, 0.1129f, 
	0.5521f, 0.7199f, 0.3668f, 
	0.0644f, 0.2628f, 0.2458f, 
	0.0174f, 0.7501f, 0.1375f, 
	0.1172f, 0.3966f, 0.5407f, 
	0.9433f, 0.6665f, 0.9162f, 
	0.5824f, 0.1965f, 0.3002f, 
	0.7676f, 0.5003f, 0.9744f, 
	0.1846f, 0.7607f, 0.3095f, 
	0.2423f, 0.8203f, 0.0302f, 
	0.5369f, 0.6575f, 0.113f, 
	0.7652f, 0.818f, 0.7525f, 
	0.7026f, 0.9257f, 0.888f, 
	0.4724f, 0.4286f, 0.3014f, 
	0.9781f, 0.1277f, 0.6691f, 
	0.0726f, 0.7394f, 0.7693f, 
	0.6991f, 0.9759f, 0.3013f, 
	0.9321f, 0.2908f, 0.0679f, 
	0.5977f, 0.6616f, 0.0138f, 
	0.194f, 0.1434f, 0.6559f, 
	0.8032f, 0.8359f, 0.1733f, 
	0.6851f, 0.5661f, 0.6717f, 
	0.474f, 0.8021f, 0.0968f, 
	0.9738f, 0.8732f, 0.375f, 
	0.4706f, 0.9065f, 0.9646f, 
	0.2918f, 0.401f, 0.8593f, 
	0.478f, 0.5707f, 0.7989f, 
	0.6955f, 0.5673f, 0.1834f, 
	0.6842f, 0.2009f, 0.7729f, 
	0.53f, 0.0711f, 0.9347f, 
	0.3681f, 0.3936f, 0.2985f, 
	0.8166f, 0.9836f, 0.9848f, 
	0.3846f, 0.5837f, 0.4539f, 
	0.1897f, 0.5761f, 0.3067f, 
	0.4521f, 0.4677f, 0.3939f, 
	0.8641f, 0.148f, 0.9405f, 
	0.068f, 0.461f, 0.549f, 
	0.4088f, 0.9045f, 0.1413f, 
	0.7453f, 0.5174f, 0.2606f, 
	0.4279f, 0.9531f, 0.3722f, 
	0.3427f, 0.2675f, 0.6174f, 
	0.1552f, 0.5952f, 0.0627f, 
	0.1239f, 0.6801f, 0.9409f, 
	0.5795f, 0.3403f, 0.7098f, 
	0.8695f, 0.6279f, 0.1752f, 
	0.6896f, 0.6908f, 0.2391f, 
	0.1512f, 0.7065f, 0.2249f, 
	0.1631f, 0.5963f, 0.6934f, 
	0.8837f, 0.2639f, 0.4096f, 
	0.6111f, 0.7112f, 0.3235f, 
	0.571f, 0.9115f, 0.7984f, 
	0.778f, 0.4901f, 0.9524f, 
	0.2927f, 0.5695f, 0.6223f, 
	0.0282f, 0.8154f, 0.8099f, 
	0.2571f, 0.9459f, 0.8396f, 
	0.8763f, 0.427f, 0.0203f, 
	0.0082f, 0.7418f, 0.4752f, 
	0.5737f, 0.8293f, 0.3143f, 
	0.2736f, 0.5705f, 0.52f, 
	0.9347f, 0.1381f, 0.5766f, 
	0.1849f, 0.4732f, 0.4358f, 
	0.8441f, 0.3506f, 0.9607f, 
	0.4446f, 0.9976f, 0.0711f, 
	0.919f, 0.7899f, 0.6485f, 
	0.6235f, 0.7752f, 0.2804f, 
	0.3343f, 0.7647f, 0.1167f, 
	0.3426f, 0.254f, 0.5666f, 
	0.4524f, 0.8014f, 0.717f, 
	0.7057f, 0.2066f, 0.9362f, 
	0.3646f, 0.6354f, 0.5631f, 
	0.1969f, 0.2192f, 0.457f, 
	0.9774f, 0.3723f, 0.2059f, 
	0.8471f, 0.8025f, 0.328f, 
	0.9636f, 0.8314f, 0.5315f, 
	0.8122f, 0.5618f, 0.5607f, 
	0.5452f, 0.8545f, 0.8249f, 
	0.9604f, 0.0435f, 0.6937f, 
	0.2001f, 0.5421f, 0.6824f, 
	0.2233f, 0.0001f, 0.5771f, 
	0.7845f, 0.4956f, 0.8049f, 
	0.2046f, 0.4759f, 0.0957f, 
	0.5962f, 0.608f, 0.2145f, 
	0.5601f, 0.3399f, 0.3567f, 
	0.0944f, 0.2998f, 0.2119f, 
	0.9318f, 0.4885f, 0.8416f, 
	0.0999f, 0.44f, 0.8997f, 
	0.671f, 0.4615f, 0.7465f, 
	0.772f, 0.0763f, 0.5506f, 
	0.2146f, 0.1794f, 0.2132f, 
	0.1672f, 0.801f, 0.997f, 
	0.4319f, 0.6416f, 0.3318f, 
	0.0239f, 0.3623f, 0.3992f, 
	0.0607f, 0.9983f, 0.9828f, 
	0.2073f, 0.7481f, 0.3417f, 
	0.2248f, 0.0025f, 0.3416f, 
	0.2266f, 0.5151f, 0.593f, 
	0.0807f, 0.0324f, 0.5961f, 
	0.949f, 0.2456f, 0.7444f, 
	0.0316f, 0.4313f, 0.2991f, 
	0.0244f, 0.1954f, 0.5697f, 
	0.8417f, 0.8132f, 0.4155f, 
	0.2553f, 0.8213f, 0.0466f, 
	0.5825f, 0.7115f, 0.9441f, 
	0.3752f, 0.2185f, 0.9864f, 
	0.1523f, 0.3069f, 0.5771f, 
	0.5984f, 0.8195f, 0.4045f, 
	0.4374f, 0.7696f, 0.4576f, 
	0.4671f, 0.1812f, 0.1884f, 
	0.2225f, 0.2073f, 0.9133f, 
	0.0584f, 0.6086f, 0.6793f, 
	0.9827f, 0.2822f, 0.1295f, 
	0.591f, 0.0533f, 0.4372f, 
	0.3941f, 0.5813f, 0.2388f, 
	0.6784f, 0.5387f, 0.3719f, 
	0.5417f, 0.9844f, 0.6225f, 
	0.4128f, 0.3522f, 0.1498f, 
	0.1967f, 0.8565f, 0.9969f, 
	0.8875f, 0.5544f, 0.8821f, 
	0.154f, 0.9525f, 0.6801f, 
	0.3643f, 0.9118f, 0.2157f, 
	0.6657f, 0.8204f, 0.9203f, 
	0.3341f, 0.0091f, 0.2271f, 
	0.0541f, 0.1893f, 0.6537f, 
	0.4955f, 0.9008f, 0.555f, 
	0.6901f, 0.4502f, 0.2127f, 
	0.2486f, 0.6815f, 0.0355f, 
	0.4546f, 0.9484f, 0.2126f, 
	0.964f, 0.5744f, 0.8287f, 
	0.7834f, 0.3917f, 0.2112f, 
	0.5472f, 0.8511f, 0.7543f, 
	0.0478f, 0.5724f, 0.1861f, 
	0.6091f, 0.4028f, 0.6401f, 
	0.0494f, 0.9049f, 0.1842f, 
	0.3054f, 0.0359f, 0.4501f, 
	0.0712f, 0.3411f, 0.6606f, 
	0.9419f, 0.7178f, 0.3706f, 
	0.0961f, 0.9574f, 0.1112f, 
	0.5899f, 0.7796f, 0.1051f, 
	0.5343f, 0.1952f, 0.562f, 
	0.3175f, 0.4292f, 0.647f, 
	0.0293f, 0.9887f, 0.1441f, 
	0.8524f, 0.7392f, 0.2231f, 
	0.4558f, 0.1747f, 0.7817f, 
	0.3461f, 0.7491f, 0.0175f, 
	0.3562f, 0.6085f, 0.7426f, 
	0.7201f, 0.2502f, 0.4763f, 
	0.5744f, 0.7661f, 0.3234f, 
	0.6065f, 0.0246f, 0.2476f, 
	0.825f, 0.4146f, 0.1141f, 
	0.1685f, 0.4075f, 0.6031f, 
	0.9089f, 0.4055f, 0.6732f, 
	0.7194f, 0.4096f, 0.9201f, 
	0.9079f, 0.2991f, 0.3005f, 
	0.6105f, 0.3034f, 0.4463f, 
	0.372f, 0.8526f, 0.3703f, 
	0.1545f, 0.8031f, 0.6043f, 
	0.6575f, 0.4908f, 0.4151f, 
	0.0797f, 0.4639f, 0.6064f, 
	0.4477f, 0.7582f, 0.5393f, 
	0.964f, 0.5879f, 0.4624f, 
	0.2015f, 0.4777f, 0.4911f, 
	0.5809f, 0.4109f, 0.9471f, 
	0.4193f, 0.7023f, 0.6245f, 
	0.9666f, 0.4458f, 0.5381f, 
	0.0292f, 0.207f, 0.4818f, 
	0.312f, 0.4974f, 0.429f, 
	0.335f, 0.1283f, 0.6023f, 
	0.3378f, 0.4375f, 0.4219f, 
	0.6127f, 0.1893f, 0.94f, 
	0.9164f, 0.8432f, 0.7098f, 
	0.8235f, 0.8605f, 0.9044f, 
	0.1572f, 0.7369f, 0.1934f, 
	0.1917f, 0.538f, 0.4867f, 
	0.7225f, 0.8451f, 0.865f, 
	0.7194f, 0.0927f, 0.3569f, 
	0.9617f, 0.8671f, 0.2136f, 
	0.9314f, 0.8114f, 0.7479f, 
	0.5507f, 0.4289f, 0.6624f, 
	0.1454f, 0.8491f, 0.5592f, 
	0.3479f, 0.6668f, 0.3986f, 
	0.9154f, 0.7311f, 0.9835f, 
	0.5432f, 0.6824f, 0.3004f, 
	0.332f, 0.2643f, 0.0261f, 
	0.2568f, 0.0638f, 0.0054f, 
	0.4834f, 0.8092f, 0.8769f, 
	0.4181f, 0.1793f, 0.1055f, 
	0.2524f, 0.7562f, 0.0042f, 
	0.9522f, 0.812f, 0.7846f, 
	0.1494f, 0.7633f, 0.6148f, 
	0.7999f, 0.8023f, 0.3033f, 
	0.1531f, 0.8174f, 0.7907f, 
	0.6698f, 0.094f, 0.0422f, 
	0.6554f, 0.312f, 0.1139f, 
	0.9345f, 0.7432f, 0.6327f, 
	0.8862f, 0.6327f, 0.4346f, 
	0.828f, 0.6108f, 0.2071f, 
	0.1474f, 0.5411f, 0.2428f, 
	0.5127f, 0.0612f, 0.4183f, 
	0.144f, 0.7911f, 0.0464f, 
	0.2233f, 0.6183f, 0.1245f, 
	0.3352f, 0.534f, 0.544f, 
	0.8297f, 0.5188f, 0.2748f, 
	0.2912f, 0.5949f, 0.445f, 
	0.6606f, 0.2816f, 0.2026f, 
	0.8481f, 0.5353f, 0.0121f, 
	0.1273f, 0.5623f, 0.0282f, 
	0.394f, 0.593f, 0.0336f, 
	0.4289f, 0.1515f, 0.8306f, 
	0.0871f, 0.0988f, 0.4057f, 
	0.7137f, 0.7776f, 0.6812f, 
	0.6126f, 0.7189f, 0.9847f, 
	0.5236f, 0.1583f, 0.3026f, 
	0.061f, 0.1984f, 0.3138f, 
	0.1033f, 0.1387f, 0.7655f, 
	0.0069f, 0.6376f, 0.8244f, 
	0.4382f, 0.3658f, 0.6051f, 
	0.978f, 0.1575f, 0.7649f, 
	0.9921f, 0.368f, 0.4125f, 
	0.0628f, 0.771f, 0.7711f, 
	0.105f, 0.7217f, 0.097f, 
	0.8729f, 0.6541f, 0.5854f, 
	0.0582f, 0.2332f, 0.546f, 
	0.2619f, 0.4447f, 0.8116f, 
	0.9505f, 0.4204f, 0.5928f, 
	0.5138f, 0.9031f, 0.1257f, 
	0.0541f, 0.0223f, 0.6883f, 
	0.9619f, 0.3849f, 0.7923f, 
	0.5564f, 0.2121f, 0.4317f, 
	0.2431f, 0.2895f, 0.5627f, 
	0.9578f, 0.9039f, 0.5263f, 
	0.1764f, 0.2285f, 0.5829f, 
	0.0341f, 0.3451f, 0.3337f, 
	0.8075f, 0.658f, 0.8375f, 
	0.7462f, 0.4964f, 0.0625f, 
	0.1714f, 0.3204f, 0.7227f, 
	0.6708f, 0.4365f, 0.1874f, 
	0.6186f, 0.3889f, 0.9367f, 
	0.6571f, 0.8902f, 0.1191f, 
	0.0057f, 0.3602f, 0.827f, 
	0.6139f, 0.0783f, 0.7309f, 
	0.113f, 0.9651f, 0.3772f, 
	0.1451f, 0.4635f, 0.9343f, 
	0.2004f, 0.5494f, 0.4608f, 
	0.4806f, 0.7539f, 0.4111f, 
	0.8524f, 0.7434f, 0.9496f, 
	0.276f, 0.3332f, 0.2125f, 
	0.9919f, 0.3114f, 0.654f, 
	0.4734f, 0.9489f, 0.888f, 
	0.7387f, 0.7963f, 0.327f, 
	0.2871f, 0.5718f, 0.2168f, 
	0.1625f, 0.9535f, 0.5276f, 
	0.1103f, 0.2103f, 0.3076f, 
	0.6264f, 0.9211f, 0.4981f, 
	0.2683f, 0.3566f, 0.3515f, 
	0.5855f, 0.8264f, 0.4811f, 
	0.3942f, 0.8746f, 0.0323f, 
	0.0602f, 0.4207f, 0.7718f, 
	0.3217f, 0.9973f, 0.5392f, 
	0.6556f, 0.3819f, 0.5993f, 
	0.526f, 0.9768f, 0.1869f, 
	0.5564f, 0.7607f, 0.6096f, 
	0.5572f, 0.825f, 0.6365f, 
	0.2594f, 0.6856f, 0.4077f, 
	0.903f, 0.5167f, 0.9093f, 
	0.5547f, 0.1116f, 0.3513f, 
	0.7881f, 0.8753f, 0.3785f, 
	0.3928f, 0.0982f, 0.1405f, 
	0.3564f, 0.0194f, 0.4323f, 
	0.0756f, 0.8233f, 0.0875f, 
	0.5695f, 0.3119f, 0.8347f, 
	0.083f, 0.2346f, 0.3761f, 
	0.6901f, 0.3182f, 0.36f, 
	0.4069f, 0.4756f, 0.8732f, 
	0.4403f, 0.8628f, 0.5121f, 
	0.0334f, 0.7684f, 0.0631f, 
	0.7654f, 0.6857f, 0.8787f, 
	0.6773f, 0.3079f, 0.6063f, 
	0.6825f, 0.1409f, 0.8996f, 
	0.4701f, 0.9962f, 0.4682f, 
	0.0137f, 0.383f, 0.098f, 
	0.7611f, 0.0852f, 0.5886f, 
	0.315f, 0.1263f, 0.0223f, 
	0.6864f, 0.8503f, 0.4205f, 
	0.1929f, 0.7407f, 0.1531f, 
	0.6017f, 0.0284f, 0.1742f, 
	0.9002f, 0.6485f, 0.3591f, 
	0.1203f, 0.975f, 0.9168f, 
	0.697f, 0.7273f, 0.2136f, 
	0.5795f, 0.5769f, 0.7876f, 
	0.2654f, 0.6339f, 0.3588f, 
	0.4313f, 0.6727f, 0.7048f, 
	0.9729f, 0.3103f, 0.4699f, 
	0.8112f, 0.6051f, 0.0281f, 
	0.5913f, 0.5067f, 0.1979f, 
	0.7152f, 0.3954f, 0.9512f, 
	0.5538f, 0.565f, 0.0867f, 
	0.5127f, 0.5187f, 0.242f, 
	0.0006f, 0.4785f, 0.2994f, 
	0.0428f, 0.6946f, 0.2699f, 
	0.6197f, 0.7185f, 0.2668f, 
	0.2858f, 0.3763f, 0.1287f, 
	0.7352f, 0.0342f, 0.9989f, 
	0.0158f, 0.9745f, 0.2459f, 
	0.5975f, 0.0023f, 0.3781f, 
	0.7295f, 0.4965f, 0.097f, 
	0.1167f, 0.9833f, 0.0072f, 
	0.2197f, 0.3551f, 0.3755f, 
	0.6147f, 0.2291f, 0.5439f, 
	0.3695f, 0.2936f, 0.7862f, 
	0.3671f, 0.3239f, 0.6488f, 
	0.923f, 0.6137f, 0.3003f, 
	0.9633f, 0.6216f, 0.7418f, 
	0.651f, 0.0367f, 0.8695f, 
	0.122f, 0.14f, 0.0624f, 
	0.9546f, 0.3191f, 0.6565f, 
	0.1822f, 0.4613f, 0.8099f, 
	0.2648f, 0.7555f, 0.9145f, 
	};

    unsigned int VAO;
glGenVertexArrays(1, &VAO);
glBindVertexArray(VAO);
   
unsigned int VBO;
glGenBuffers(1, &VBO);
glBindBuffer(GL_ARRAY_BUFFER, VBO);
glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);

unsigned int EBO;
glGenBuffers(1, &EBO);
glBindBuffer(GL_ARRAY_BUFFER, EBO);
glBufferData(GL_ARRAY_BUFFER, sizeof(colors), colors, GL_STATIC_DRAW);

// 1rst attribute buffer : vertices
glEnableVertexAttribArray(0);
glBindBuffer(GL_ARRAY_BUFFER, VBO);
glVertexAttribPointer(
0, // attribute. No particular reason for 0, but
// must match the layout in the shader.
3, // size
GL_FLOAT, // type
GL_FALSE, // normalized?
0, // stride
(void*)0 // array buffer offset
);
// 2nd attribute buffer : colors
glEnableVertexAttribArray(1);
glBindBuffer(GL_ARRAY_BUFFER, EBO);
glVertexAttribPointer(
1, // attribute. No particular reason for 1, but
// must match the layout in the shader.
3, // size
GL_FLOAT, // type
GL_FALSE, // normalized?
0, // stride
(void*)0 // array buffer offset
);


// Get a handle for our "MVP" uniform
unsigned int MatrixID = glGetUniformLocation(shaderProgram, "MVP");
Model = glm::rotate(Model, glm::radians(30.0f), glm::vec3(1.0f, 0.0f, 0.0f));
View = glm::translate(View, glm::vec3(0.0f, 0.0f, -3.0f));

glm::mat4 View = glm::lookAt(
glm::vec3(0,0,3),
glm::vec3(0,0,0),
glm::vec3(0,1,0)
);


//Projection = glm::perspective(glm::radians(45.0f), 4.0f/3.0f, 0.1f, 100.0f);
Projection = glm::ortho(-1.0f,1.0f,-1.0f,1.0f,0.0f,100.0f);
// Our ModelViewProjection : multiplication of our 3 matrices
// Remember, matrix multiplication is the other way around
MVP = Projection * View * Model;

    // uncomment this call to draw in wireframe polygons.
    //glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);

    // render loop
    // -----------
    while (!glfwWindowShouldClose(window))
    {
        // input
        // -----
        processInput(window);

        // render
        // ------
        glClearColor(0.2f, 0.3f, 0.3f, 1.0f);
        glClear(GL_COLOR_BUFFER_BIT);
        //glDepthFunc(GL_LESS);
        //glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

        glEnable(GL_DEPTH_TEST);
        glDepthFunc(GL_LESS);
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );
        
        // draw our first triangle
        glUseProgram(shaderProgram);
        glBindVertexArray(VAO); // seeing as we only have a single VAO there's no need to bind it every time, but we'll do so to keep things a bit more organized
        glDrawArrays(GL_TRIANGLES, 0, 750);
        // glBindVertexArray(0); // no need to unbind it every time

        // Send our transformation to the currently bound shader,
        // in the "MVP" uniform
        glUniformMatrix4fv(MatrixID, 1, GL_FALSE, &MVP[0][0]);


        // glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)
        // -------------------------------------------------------------------------------
        glfwSwapBuffers(window);
        glfwPollEvents();
    }

    // optional: de-allocate all resources once they've outlived their purpose:
    // ------------------------------------------------------------------------
    glDeleteVertexArrays(1, &VAO);
    glDeleteBuffers(1, &VBO);
    glDeleteProgram(shaderProgram);

    // glfw: terminate, clearing all previously allocated GLFW resources.
    // ------------------------------------------------------------------
    glfwTerminate();
    return 0;
}


void processInput(GLFWwindow *window)
{
    if(glfwGetKey(window,GLFW_KEY_ESCAPE) == GLFW_PRESS)
        glfwSetWindowShouldClose(window, true);
    
    
    if(glfwGetKey(window, GLFW_KEY_E) == GLFW_PRESS || CAM == 1) { //Esquerda
    View = glm::lookAt(glm::vec3(-3,0,0),glm::vec3(0,0,0),glm::vec3(0,3,0));
    MVP = Projection * View * Model;
     CAM = 0;
    }
    if(glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS || CAM == 1) { //Direita
    View = glm::lookAt(glm::vec3(3,0,0),glm::vec3(0,0,0),glm::vec3(0,3,0));
    MVP = Projection * View * Model;
     CAM = 0;
    }
    if(glfwGetKey(window, GLFW_KEY_F) == GLFW_PRESS || CAM == 1) { //Frente
    View = glm::lookAt(glm::vec3(0,0,3),glm::vec3(0,0,0),glm::vec3(0,3,0));
    MVP = Projection * View * Model;
     CAM = 0;
    }
    if(glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS || CAM == 1) { //Atras
    View = glm::lookAt(glm::vec3(0,0,-3),glm::vec3(0,0,0),glm::vec3(0,3,0));
    MVP = Projection * View * Model;
     CAM = 0;
    }
    if(glfwGetKey(window,GLFW_KEY_C) == GLFW_PRESS || CAM == 1) {//Cima
    View = glm::lookAt(glm::vec3(0.0, 3.0f, 0.0),glm::vec3(0.0, 0.0, 0.0),glm::vec3(0.0, 0.0, -3.0));
    MVP = Projection * View * Model;
     CAM = 0;
    }
    if(glfwGetKey(window, GLFW_KEY_B) == GLFW_PRESS || CAM == 1) {//Baixo
    View = glm::lookAt(glm::vec3(0.0, -3.0f, 0.0),glm::vec3(0.0, 0.0, 0.0),glm::vec3(0.0, 0.0, 3.0));
    MVP = Projection * View * Model;
     CAM = 0;
    }
}

// glfw: whenever the window size changed (by OS or user resize) this callback function executes
// ---------------------------------------------------------------------------------------------
void framebuffer_size_callback(GLFWwindow* window, int width, int height)
{
    // make sure the viewport matches the new window dimensions; note that width and
    // height will be significantly larger than specified on retina displays.
    glViewport(0, 0, width, height);
}