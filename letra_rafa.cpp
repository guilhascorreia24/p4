#include<glad/glad.h>
#include<GLFW/glfw3.h>

#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>

#include <iostream>
void framebuffer_size_callback(GLFWwindow* window, int width, int height);
glm::mat4 processInput(GLFWwindow *window, glm::mat4 View);
float* getAllColors(float* oldArray, int colorsSize, int verticesSize);

// settings
const unsigned int SCR_WIDTH = 800;
const unsigned int SCR_HEIGHT = 600;

// Input vertex data, different for all executions of this shader.
// Output data color, will be interpolated for each fragment.
const char *vertexShaderSource = "#version 330 core\n"
    "layout (location = 0) in vec3 aPos;\n"
    "layout (location = 1) in vec3 vertexColor;\n"
    "out vec3 fragmentColor;\n"
    "uniform mat4 MVP; \n"
    "void main()\n"
    "{\n"
    "   gl_Position = MVP * vec4(aPos, 0.5);\n"
    "   fragmentColor = vertexColor;\n"
    "}\0";
// declare and define fshader, position in color vector declaration
// are RGBA from [0,1] simply in and out
const char *fragmentShaderSource = "#version 330 core\n"
    "in vec3 fragmentColor;\n;"
    "out vec3 FragColor;\n"
    "void main()\n"
    "{\n"
    "   FragColor = fragmentColor;\n"
    "}\n\0";

int main()
{

  // glfw: initialize and configure
  // ------------------------------
  glfwInit();
  glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
  glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
  glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
  glfwWindowHint(GLFW_SAMPLES, 4);
#ifdef __APPLE__
  glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);
#endif
  
  // glfw window creation
  // --------------------
  GLFWwindow* window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, "Simbolo 3D", NULL,
					NULL);
 
  if (window == NULL)
    {
      std::cout << "Failed to create GLFW window" << std::endl;
      glfwTerminate();
      return -1;
    }
  glfwMakeContextCurrent(window);
  glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);
  
  // glad: load all OpenGL function pointers
  // ---------------------------------------
  if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))
    {
      std::cout << "Failed to initialize GLAD" << std::endl;
      return -1;
    }
  
//------------------------------------------------------------
    // set up vertex data (and buffer(s)) and configure vertex attributes
  static const float vertices[] = {
        -0.3f, -0.38f, 0.1f, //C
        -0.17f, -0.36f, 0.1f, //D
        -0.16f, -0.41f, 0.1f, //E
        
        -0.3f, -0.38f, 0.1f, //C 
        -0.29f, -0.44f, 0.1f, //F
        -0.16f, -0.41f, 0.1f, //E 

        -0.29f, -0.44f, 0.1f, //F 
        -0.27f, -0.50f, 0.1f, //G
        -0.16f, -0.41f, 0.1f, //E 
        
        -0.16f, -0.41f, 0.1f, //E  
        -0.14f, -0.46f, 0.1f, //H
        -0.27f, -0.50f, 0.1f, //G

        -0.27f, -0.50f, 0.1f, //G 
        -0.24f, -0.54f, 0.1f, //I
        -0.14f, -0.46f, 0.1f, //H

        -0.14f, -0.46f, 0.1f, //H
        -0.12f, -0.49f, 0.1f, //J 
        -0.24f, -0.54f, 0.1f, //I

        -0.24f, -0.54f, 0.1f, //I 
        -0.20f, -0.58f, 0.1f, //K
        -0.12f, -0.49f, 0.1f, //J 

        -0.20f, -0.58f, 0.1f, //K
        -0.12f, -0.49f, 0.1f, //J
        -0.07f, -0.52f, 0.1f, //L

        -0.20f, -0.58f, 0.1f, //K
        -0.14f, -0.61f, 0.1f, //M
        -0.07f, -0.52f, 0.1f, //L 

        -0.02f, -0.53f, 0.1f, //N
        -0.14f, -0.61f, 0.1f, //M
        -0.07f, -0.52f, 0.1f, //L

        -0.02f, -0.53f, 0.1f, //N
        -0.14f, -0.61f, 0.1f, //M
        -0.06f, -0.63f, 0.1f, //O 
        
        -0.02f, -0.53f, 0.1f, //N
        -0.01f, -0.63f, 0.1f, //P
        -0.06f, -0.63f, 0.1f, //O 

        -0.02f, -0.53f, 0.1f, //N
        -0.01f, -0.63f, 0.1f, //P
        0.03f, -0.53f, 0.1f, //Q 

         0.06f, -0.63f, 0.1f, //R
        -0.01f, -0.63f, 0.1f, //P
        0.03f, -0.53f, 0.1f, //Q 

        0.06f, -0.63f, 0.1f, //R
        0.12f, -0.62f, 0.1f, //S
        0.03f, -0.53f, 0.1f, //Q 

        0.08f, -0.52f, 0.1f, //T
        0.12f, -0.62f, 0.1f, //S
        0.03f, -0.53f, 0.1f, //Q  

        0.08f, -0.52f, 0.1f, //T
        0.12f, -0.62f, 0.1f, //S
        0.12f, -0.49f, 0.1f, //U 

        0.18f, -0.59f, 0.1f, //V
        0.12f, -0.62f, 0.1f, //S
        0.12f, -0.49f, 0.1f, //U

        0.18f, -0.59f, 0.1f, //V
        0.15f, -0.45f, 0.1f, //W
        0.12f, -0.49f, 0.1f, //U 

        0.18f, -0.59f, 0.1f, //V
        0.15f, -0.45f, 0.1f, //W
        0.23f, -0.55f, 0.1f, //Z   

        0.27f, -0.49f, 0.1f, //A1
        0.15f, -0.45f, 0.1f, //W
        0.23f, -0.55f, 0.1f, //Z  

        0.27f, -0.49f, 0.1f, //A1
        0.15f, -0.45f, 0.1f, //W
        0.16f, -0.41f, 0.1f, //B1 

        0.27f, -0.49f, 0.1f, //A1
        0.29f, -0.43f, 0.1f, //C1
        0.16f, -0.41f, 0.1f, //B1   

        0.29f, -0.39f, 0.1f, //D1
        0.29f, -0.43f, 0.1f, //C1
        0.16f, -0.41f, 0.1f, //B1

        0.29f, -0.39f, 0.1f, //D1
        0.15f, -0.37f, 0.1f, //E1
        0.16f, -0.41f, 0.1f, //B1

        0.29f, -0.39f, 0.1f, //D1
        0.15f, -0.37f, 0.1f, //E1
        0.28f, -0.35f, 0.1f, //F1  

        0.26f, -0.31f, 0.1f, //G1
        0.15f, -0.37f, 0.1f, //E1
        0.28f, -0.35f, 0.1f, //F1 

        0.26f, -0.31f, 0.1f, //G1
        0.15f, -0.37f, 0.1f, //E1
        0.14f, -0.34f, 0.1f, //H1  

        0.26f, -0.31f, 0.1f, //G1
        0.11f, -0.32f, 0.1f, //I1
        0.14f, -0.34f, 0.1f, //H1 

        0.26f, -0.31f, 0.1f, //G1
        0.11f, -0.32f, 0.1f, //I1
        0.24f, -0.27f, 0.1f, //J1 

        0.03f, -0.25f, 0.1f, //K1
        0.11f, -0.32f, 0.1f, //I1
        0.24f, -0.27f, 0.1f, //J1 

        0.03f, -0.25f, 0.1f, //K1
        0.20f, -0.23f, 0.1f, //L1
        0.24f, -0.27f, 0.1f, //J1 

        0.03f, -0.25f, 0.1f, //K1
        0.20f, -0.23f, 0.1f, //L1
        0.17f, -0.20f, 0.1f, //M1  

        0.03f, -0.25f, 0.1f, //K1
        -0.22f, -0.1f, 0.1f, //N1
        -0.12f, -0.01f, 0.1f, //O1

        -0.04f, -0.14f, 0.1f, //Q1
        0.0f, -0.09f, 0.1f, //P1
        -0.12f, -0.01f, 0.1f, //O1

        -0.04f, -0.14f, 0.1f, //Q1
        0.0f, -0.09f, 0.1f, //P1
        0.11f, -0.16f, 0.1f, //R1  

        -0.04f, -0.14f, 0.1f, //Q1
        0.03f, -0.25f, 0.1f, //K1
        0.11f, -0.16f, 0.1f, //R1

        0.17f, -0.20f, 0.1f, //M1
        0.03f, -0.25f, 0.1f, //K1
        0.11f, -0.16f, 0.1f, //R1 

        0.17f, -0.20f, 0.1f, //M1
        0.16f, -0.13f, 0.1f, //S1
        0.11f, -0.16f, 0.1f, //R1

        0.17f, -0.20f, 0.1f, //M1
        0.16f, -0.13f, 0.1f, //S1
        0.25f, -0.17f, 0.1f, //T1

        0.18f, -0.1f, 0.1f, //U1
        0.16f, -0.13f, 0.1f, //S1
        0.25f, -0.17f, 0.1f, //T1 

        0.18f, -0.1f, 0.1f, //U1
        0.29f, -0.13f, 0.1f, //V1
        0.25f, -0.17f, 0.1f, //T1 
        
        0.18f, -0.1f, 0.1f, //U1
        0.29f, -0.13f, 0.1f, //V1
        0.21f, -0.05f, 0.1f, //W1 

        0.32f, -0.08f, 0.1f, //Z1
        0.29f, -0.13f, 0.1f, //V1
        0.21f, -0.05f, 0.1f, //W1 
        
        -0.28f, -0.05f, 0.1f, //A2
        -0.22f, -0.1f, 0.1f, //N1
        -0.12f, -0.01f, 0.1f, //O1

        -0.28f, -0.05f, 0.1f, //A2
        -0.21f, 0.06f, 0.1f, //B2
        -0.12f, -0.01f, 0.1f, //O1

        -0.28f, -0.05f, 0.1f, //A2
        -0.21f, 0.06f, 0.1f, //B2
        -0.33f, 0.04f, 0.1f, //C2

        -0.34f, 0.09f, 0.1f, //D2
        -0.21f, 0.06f, 0.1f, //B2
        -0.33f, 0.04f, 0.1f, //C2
        
        -0.34f, 0.09f, 0.1f, //D2
        -0.21f, 0.06f, 0.1f, //B2
        -0.24f, 0.13f, 0.1f, //E2

        -0.34f, 0.09f, 0.1f, //D2
        -0.23f, 0.18f, 0.1f, //F2
        -0.24f, 0.13f, 0.1f, //E2

        -0.34f, 0.09f, 0.1f, //D2
        -0.23f, 0.18f, 0.1f, //F2
        -0.34f, 0.16f, 0.1f, //G2

        -0.32f, 0.22f, 0.1f, //H2
        -0.23f, 0.18f, 0.1f, //F2
        -0.34f, 0.16f, 0.1f, //G2

        -0.32f, 0.22f, 0.1f, //H2
        -0.23f, 0.18f, 0.1f, //F2
        -0.20f, 0.22f, 0.1f, //I2

        -0.32f, 0.22f, 0.1f, //H2
        -0.29f, 0.27f, 0.1f, //J2
        -0.20f, 0.22f, 0.1f, //I2

        -0.23f, 0.31f, 0.1f, //K2
        -0.29f, 0.27f, 0.1f, //J2
        -0.20f, 0.22f, 0.1f, //I2

        -0.23f, 0.31f, 0.1f, //K2
        -0.19f, 0.32f, 0.1f, //L2
        -0.20f, 0.22f, 0.1f, //I2

        -0.16f, 0.26f, 0.1f, //M2
        -0.19f, 0.32f, 0.1f, //L2
        -0.20f, 0.22f, 0.1f, //I2

        -0.16f, 0.26f, 0.1f, //M2
        -0.19f, 0.32f, 0.1f, //L2
        -0.13f, 0.28f, 0.1f, //N2

        -0.01f, 0.34f, 0.1f, //P2
        -0.02f, 0.20f, 0.1f, //O2
        -0.13f, 0.28f, 0.1f, //N2

        -0.01f, 0.34f, 0.1f, //P2
        -0.02f, 0.20f, 0.1f, //O2
        0.16f, 0.24f, 0.1f, //Q2
        
        0.13f, 0.1f, 0.1f, //R2
        -0.02f, 0.20f, 0.1f, //O2
        0.16f, 0.24f, 0.1f, //Q2

        0.13f, 0.1f, 0.1f, //R2
        0.25f, 0.17f, 0.1f, //S2
        0.16f, 0.24f, 0.1f, //Q2

        0.32f, -0.08f, 0.1f, //Z1
        0.33f, -0.02f, 0.1f, //T2
        0.21f, -0.05f, 0.1f, //W1 

        0.21f, -0.01f, 0.1f, //U2
        0.33f, -0.02f, 0.1f, //T2
        0.21f, -0.05f, 0.1f, //W1

        0.21f, -0.01f, 0.1f, //U2
        0.33f, -0.02f, 0.1f, //T2
        0.33f, 0.04f, 0.1f, //V2 

        0.21f, -0.01f, 0.1f, //U2
        0.19f, 0.05f, 0.1f, //W2
        0.33f, 0.04f, 0.1f, //V2 

        0.3f, 0.12f, 0.1f, //Z2
        0.19f, 0.05f, 0.1f, //W2
        0.33f, 0.04f, 0.1f, //V2 

        0.3f, 0.12f, 0.1f, //Z2
        0.19f, 0.05f, 0.1f, //W2
        0.25f, 0.17f, 0.1f, //S2

        0.13f, 0.1f, 0.1f, //R2
        0.19f, 0.05f, 0.1f, //W2
        0.25f, 0.17f, 0.1f, //S2

        -0.01f, 0.34f, 0.1f, //P2
        -0.13f, 0.43f, 0.1f, //A3
        -0.13f, 0.28f, 0.1f, //N2 

        -0.13f, 0.43f, 0.1f, //A3
        -0.19f, 0.32f, 0.1f, //L2
        -0.24f, 0.38f, 0.1f, //B3

        -0.13f, 0.43f, 0.1f, //A3
        -0.19f, 0.32f, 0.1f, //L2
        -0.13f, 0.28f, 0.1f, //N2

        -0.13f, 0.43f, 0.1f, //A3
        -0.15f, 0.47f, 0.1f, //C3
        -0.24f, 0.38f, 0.1f, //B3

        -0.27f, 0.43f, 0.1f, //D3
        -0.15f, 0.47f, 0.1f, //C3
        -0.24f, 0.38f, 0.1f, //B3

        -0.27f, 0.43f, 0.1f, //D3
        -0.15f, 0.47f, 0.1f, //C3
        -0.28f, 0.49f, 0.1f, //E3

        -0.28f, 0.54f, 0.1f, //F3
        -0.15f, 0.47f, 0.1f, //C3
        -0.28f, 0.49f, 0.1f, //E3

        -0.28f, 0.54f, 0.1f, //F3
        -0.15f, 0.47f, 0.1f, //C3
        -0.26f, 0.6f, 0.1f, //G3

        -0.23f, 0.64f, 0.1f, //H3
        -0.15f, 0.47f, 0.1f, //C3
        -0.26f, 0.6f, 0.1f, //G3

        -0.23f, 0.64f, 0.1f, //H3
        -0.19f, 0.67f, 0.1f, //I3
        -0.13f, 0.57f, 0.1f, //J3

        -0.23f, 0.64f, 0.1f, //H3
        -0.15f, 0.54f, 0.1f, //K3
        -0.13f, 0.57f, 0.1f, //J3

        -0.23f, 0.64f, 0.1f, //H3
        -0.15f, 0.54f, 0.1f, //K3
        -0.16f, 0.51f, 0.1f, //L3

        -0.23f, 0.64f, 0.1f, //H3
        -0.15f, 0.47f, 0.1f, //C3
        -0.16f, 0.51f, 0.1f, //L3

        -0.11f, 0.59f, 0.1f, //M3
        -0.19f, 0.67f, 0.1f, //I3
        -0.13f, 0.57f, 0.1f, //J3

        -0.11f, 0.59f, 0.1f, //M3
        -0.19f, 0.67f, 0.1f, //I3
        -0.07f, 0.61f, 0.1f, //N3

        -0.14f, 0.7f, 0.1f, //O3
        -0.19f, 0.67f, 0.1f, //I3
        -0.07f, 0.61f, 0.1f, //N3

        -0.14f, 0.7f, 0.1f, //O3
        -0.1f, 0.72f, 0.1f, //P3
        -0.07f, 0.61f, 0.1f, //N3

        -0.05f, 0.72f, 0.1f, //Q3
        -0.1f, 0.72f, 0.1f, //P3
        -0.07f, 0.61f, 0.1f, //N3

        -0.05f, 0.72f, 0.1f, //Q3
        0.0f, 0.72f, 0.1f, //R3
        -0.07f, 0.61f, 0.1f, //N3

        -0.01f, 0.62f, 0.1f, //S3
        0.0f, 0.72f, 0.1f, //R3
        -0.07f, 0.61f, 0.1f, //N3

        -0.01f, 0.62f, 0.1f, //S3
        0.0f, 0.72f, 0.1f, //R3
        0.04f, 0.61f, 0.1f, //T3

        0.06f, 0.72f, 0.1f, //U3
        0.0f, 0.72f, 0.1f, //R3
        0.04f, 0.61f, 0.1f, //T3

        0.06f, 0.72f, 0.1f, //U3
        0.11f, 0.7f, 0.1f, //V3
        0.04f, 0.61f, 0.1f, //T3

        0.07f, 0.6f, 0.1f, //W3
        0.11f, 0.7f, 0.1f, //V3
        0.04f, 0.61f, 0.1f, //T3

        0.07f, 0.6f, 0.1f, //W3
        0.11f, 0.7f, 0.1f, //V3
        0.1f, 0.57f, 0.1f, //Z3

        0.16f, 0.68f, 0.1f, //A4
        0.11f, 0.7f, 0.1f, //V3
        0.1f, 0.57f, 0.1f, //Z3

        0.16f, 0.68f, 0.1f, //A4
        0.20f, 0.64f, 0.1f, //B4
        0.1f, 0.57f, 0.1f, //Z3

        0.12f, 0.53f, 0.1f, //C4
        0.20f, 0.64f, 0.1f, //B4
        0.1f, 0.57f, 0.1f, //Z3

        0.12f, 0.53f, 0.1f, //C4
        0.20f, 0.64f, 0.1f, //B4
        0.24f, 0.59f, 0.1f, //D4

        0.12f, 0.53f, 0.1f, //C4
        0.13f, 0.49f, 0.1f, //E4
        0.24f, 0.59f, 0.1f, //D4

        0.26f, 0.54f, 0.1f, //F4
        0.13f, 0.49f, 0.1f, //E4
        0.24f, 0.59f, 0.1f, //D4

        0.27f, 0.48f, 0.1f, //H4
        0.13f, 0.49f, 0.1f, //E4
        0.14f, 0.47f, 0.1f, //G4

        0.27f, 0.48f, 0.1f, //H4
        0.26f, 0.54f, 0.1f, //F4
        0.13f, 0.49f, 0.1f, //E4

        //-----------------------------------

        //-----------------------------------

        //-----------------------------------

        // same vertex but with z * -1

        //-----------------------------------

        //-----------------------------------

        -0.3f, -0.38f, -0.1f, //C
        -0.17f, -0.36f, -0.1f, //D
        -0.16f, -0.41f, -0.1f, //E
        
        -0.3f, -0.38f, -0.1f, //C 
        -0.29f, -0.44f, -0.1f, //F
        -0.16f, -0.41f, -0.1f, //E 

        -0.29f, -0.44f, -0.1f, //F 
        -0.27f, -0.50f, -0.1f, //G
        -0.16f, -0.41f, -0.1f, //E 
        
        -0.16f, -0.41f, -0.1f, //E  
        -0.14f, -0.46f, -0.1f, //H
        -0.27f, -0.50f, -0.1f, //G

        -0.27f, -0.50f, -0.1f, //G 
        -0.24f, -0.54f, -0.1f, //I
        -0.14f, -0.46f, -0.1f, //H

        -0.14f, -0.46f, -0.1f, //H
        -0.12f, -0.49f, -0.1f, //J 
        -0.24f, -0.54f, -0.1f, //I

        -0.24f, -0.54f, -0.1f, //I 
        -0.20f, -0.58f, -0.1f, //K
        -0.12f, -0.49f, -0.1f, //J 

        -0.20f, -0.58f, -0.1f, //K
        -0.12f, -0.49f, -0.1f, //J
        -0.07f, -0.52f, -0.1f, //L

        -0.20f, -0.58f, -0.1f, //K
        -0.14f, -0.61f, -0.1f, //M
        -0.07f, -0.52f, -0.1f, //L 

        -0.02f, -0.53f, -0.1f, //N
        -0.14f, -0.61f, -0.1f, //M
        -0.07f, -0.52f, -0.1f, //L

        -0.02f, -0.53f, -0.1f, //N
        -0.14f, -0.61f, -0.1f, //M
        -0.06f, -0.63f, -0.1f, //O 
        
        -0.02f, -0.53f, -0.1f, //N
        -0.01f, -0.63f, -0.1f, //P
        -0.06f, -0.63f, -0.1f, //O 

        -0.02f, -0.53f, -0.1f, //N
        -0.01f, -0.63f, -0.1f, //P
        0.03f, -0.53f, -0.1f, //Q 

         0.06f, -0.63f, -0.1f, //R
        -0.01f, -0.63f, -0.1f, //P
        0.03f, -0.53f, -0.1f, //Q 

        0.06f, -0.63f, -0.1f, //R
        0.12f, -0.62f, -0.1f, //S
        0.03f, -0.53f, -0.1f, //Q 

        0.08f, -0.52f, -0.1f, //T
        0.12f, -0.62f, -0.1f, //S
        0.03f, -0.53f, -0.1f, //Q  

        0.08f, -0.52f, -0.1f, //T
        0.12f, -0.62f, -0.1f, //S
        0.12f, -0.49f, -0.1f, //U 

        0.18f, -0.59f, -0.1f, //V
        0.12f, -0.62f, -0.1f, //S
        0.12f, -0.49f, -0.1f, //U

        0.18f, -0.59f, -0.1f, //V
        0.15f, -0.45f, -0.1f, //W
        0.12f, -0.49f, -0.1f, //U 

        0.18f, -0.59f, -0.1f, //V
        0.15f, -0.45f, -0.1f, //W
        0.23f, -0.55f, -0.1f, //Z   

        0.27f, -0.49f, -0.1f, //A1
        0.15f, -0.45f, -0.1f, //W
        0.23f, -0.55f, -0.1f, //Z  

        0.27f, -0.49f, -0.1f, //A1
        0.15f, -0.45f, -0.1f, //W
        0.16f, -0.41f, -0.1f, //B1 

        0.27f, -0.49f, -0.1f, //A1
        0.29f, -0.43f, -0.1f, //C1
        0.16f, -0.41f, -0.1f, //B1   

        0.29f, -0.39f, -0.1f, //D1
        0.29f, -0.43f, -0.1f, //C1
        0.16f, -0.41f, -0.1f, //B1

        0.29f, -0.39f, -0.1f, //D1
        0.15f, -0.37f, -0.1f, //E1
        0.16f, -0.41f, -0.1f, //B1

        0.29f, -0.39f, -0.1f, //D1
        0.15f, -0.37f, -0.1f, //E1
        0.28f, -0.35f, -0.1f, //F1  

        0.26f, -0.31f, -0.1f, //G1
        0.15f, -0.37f, -0.1f, //E1
        0.28f, -0.35f, -0.1f, //F1 

        0.26f, -0.31f, -0.1f, //G1
        0.15f, -0.37f, -0.1f, //E1
        0.14f, -0.34f, -0.1f, //H1  

        0.26f, -0.31f, -0.1f, //G1
        0.11f, -0.32f, -0.1f, //I1
        0.14f, -0.34f, -0.1f, //H1 

        0.26f, -0.31f, -0.1f, //G1
        0.11f, -0.32f, -0.1f, //I1
        0.24f, -0.27f, -0.1f, //J1 

        0.03f, -0.25f, -0.1f, //K1
        0.11f, -0.32f, -0.1f, //I1
        0.24f, -0.27f, -0.1f, //J1 

        0.03f, -0.25f, -0.1f, //K1
        0.20f, -0.23f, -0.1f, //L1
        0.24f, -0.27f, -0.1f, //J1 

        0.03f, -0.25f, -0.1f, //K1
        0.20f, -0.23f, -0.1f, //L1
        0.17f, -0.20f, -0.1f, //M1  

        0.03f, -0.25f, -0.1f, //K1
        -0.22f, -0.1f, -0.1f, //N1
        -0.12f, -0.01f, -0.1f, //O1

        -0.04f, -0.14f, -0.1f, //Q1
        0.0f, -0.09f, -0.1f, //P1
        -0.12f, -0.01f, -0.1f, //O1

        -0.04f, -0.14f, -0.1f, //Q1
        0.0f, -0.09f, -0.1f, //P1
        0.11f, -0.16f, -0.1f, //R1  

        -0.04f, -0.14f, -0.1f, //Q1
        0.03f, -0.25f, -0.1f, //K1
        0.11f, -0.16f, -0.1f, //R1

        0.17f, -0.20f, -0.1f, //M1
        0.03f, -0.25f, -0.1f, //K1
        0.11f, -0.16f, -0.1f, //R1 

        0.17f, -0.20f, -0.1f, //M1
        0.16f, -0.13f, -0.1f, //S1
        0.11f, -0.16f, -0.1f, //R1

        0.17f, -0.20f, -0.1f, //M1
        0.16f, -0.13f, -0.1f, //S1
        0.25f, -0.17f, -0.1f, //T1

        0.18f, -0.1f, -0.1f, //U1
        0.16f, -0.13f, -0.1f, //S1
        0.25f, -0.17f, -0.1f, //T1 

        0.18f, -0.1f, -0.1f, //U1
        0.29f, -0.13f, -0.1f, //V1
        0.25f, -0.17f, -0.1f, //T1 

        0.18f, -0.1f, -0.1f, //U1
        0.29f, -0.13f, -0.1f, //V1
        0.21f, -0.05f, -0.1f, //W1 

        0.32f, -0.08f, -0.1f, //Z1
        0.29f, -0.13f, -0.1f, //V1
        0.21f, -0.05f, -0.1f, //W1 

        -0.28f, -0.05f, -0.1f, //A2
        -0.22f, -0.1f, -0.1f, //N1
        -0.12f, -0.01f, -0.1f, //O1

        -0.28f, -0.05f, -0.1f, //A2
        -0.21f, 0.06f, -0.1f, //B2
        -0.12f, -0.01f, -0.1f, //O1

        -0.28f, -0.05f, -0.1f, //A2
        -0.21f, 0.06f, -0.1f, //B2
        -0.33f, 0.04f, -0.1f, //C2

        -0.34f, 0.09f, -0.1f, //D2
        -0.21f, 0.06f, -0.1f, //B2
        -0.33f, 0.04f, -0.1f, //C2

        -0.34f, 0.09f, -0.1f, //D2
        -0.21f, 0.06f, -0.1f, //B2
        -0.24f, 0.13f, -0.1f, //E2

        -0.34f, 0.09f, -0.1f, //D2
        -0.23f, 0.18f, -0.1f, //F2
        -0.24f, 0.13f, -0.1f, //E2

        -0.34f, 0.09f, -0.1f, //D2
        -0.23f, 0.18f, -0.1f, //F2
        -0.34f, 0.16f, -0.1f, //G2

        -0.32f, 0.22f, -0.1f, //H2
        -0.23f, 0.18f, -0.1f, //F2
        -0.34f, 0.16f, -0.1f, //G2

        -0.32f, 0.22f, -0.1f, //H2
        -0.23f, 0.18f, -0.1f, //F2
        -0.20f, 0.22f, -0.1f, //I2

        -0.32f, 0.22f, -0.1f, //H2
        -0.29f, 0.27f, -0.1f, //J2
        -0.20f, 0.22f, -0.1f, //I2

        -0.23f, 0.31f, -0.1f, //K2
        -0.29f, 0.27f, -0.1f, //J2
        -0.20f, 0.22f, -0.1f, //I2

        -0.23f, 0.31f, -0.1f, //K2
        -0.19f, 0.32f, -0.1f, //L2
        -0.20f, 0.22f, -0.1f, //I2

        -0.16f, 0.26f, -0.1f, //M2
        -0.19f, 0.32f, -0.1f, //L2
        -0.20f, 0.22f, -0.1f, //I2

        -0.16f, 0.26f, -0.1f, //M2
        -0.19f, 0.32f, -0.1f, //L2
        -0.13f, 0.28f, -0.1f, //N2

        -0.01f, 0.34f, -0.1f, //P2
        -0.02f, 0.20f, -0.1f, //O2
        -0.13f, 0.28f, -0.1f, //N2

        -0.01f, 0.34f, -0.1f, //P2
        -0.02f, 0.20f, -0.1f, //O2
        0.16f, 0.24f, -0.1f, //Q2

        0.13f, 0.1f, -0.1f, //R2
        -0.02f, 0.20f, -0.1f, //O2
        0.16f, 0.24f, -0.1f, //Q2

        0.13f, 0.1f, -0.1f, //R2
        0.25f, 0.17f, -0.1f, //S2
        0.16f, 0.24f, -0.1f, //Q2

        0.32f, -0.08f, -0.1f, //Z1
        0.33f, -0.02f, -0.1f, //T2
        0.21f, -0.05f, -0.1f, //W1 

        0.21f, -0.01f, -0.1f, //U2
        0.33f, -0.02f, -0.1f, //T2
        0.21f, -0.05f, -0.1f, //W1

        0.21f, -0.01f, -0.1f, //U2
        0.33f, -0.02f, -0.1f, //T2
        0.33f, 0.04f, -0.1f, //V2 
        
        0.21f, -0.01f, -0.1f, //U2
        0.19f, 0.05f, -0.1f, //W2
        0.33f, 0.04f, -0.1f, //V2 

        0.3f, 0.12f, -0.1f, //Z2
        0.19f, 0.05f, -0.1f, //W2
        0.33f, 0.04f, -0.1f, //V2 

        0.3f, 0.12f, -0.1f, //Z2
        0.19f, 0.05f, -0.1f, //W2
        0.25f, 0.17f, -0.1f, //S2

        0.13f, 0.1f, -0.1f, //R2
        0.19f, 0.05f, -0.1f, //W2
        0.25f, 0.17f, -0.1f, //S2

        -0.01f, 0.34f, -0.1f, //P2
        -0.13f, 0.43f, -0.1f, //A3
        -0.13f, 0.28f, -0.1f, //N2 

        -0.13f, 0.43f, -0.1f, //A3
        -0.19f, 0.32f, -0.1f, //L2
        -0.24f, 0.38f, -0.1f, //B3

        -0.13f, 0.43f, -0.1f, //A3
        -0.19f, 0.32f, -0.1f, //L2
        -0.13f, 0.28f, -0.1f, //N2

        -0.13f, 0.43f, -0.1f, //A3
        -0.15f, 0.47f, -0.1f, //C3
        -0.24f, 0.38f, -0.1f, //B3

        -0.27f, 0.43f, -0.1f, //D3
        -0.15f, 0.47f, -0.1f, //C3
        -0.24f, 0.38f, -0.1f, //B3

        -0.27f, 0.43f, -0.1f, //D3
        -0.15f, 0.47f, -0.1f, //C3
        -0.28f, 0.49f, -0.1f, //E3

        -0.28f, 0.54f, -0.1f, //F3
        -0.15f, 0.47f, -0.1f, //C3
        -0.28f, 0.49f, -0.1f, //E3

        -0.28f, 0.54f, -0.1f, //F3
        -0.15f, 0.47f, -0.1f, //C3
        -0.26f, 0.6f, -0.1f, //G3

        -0.23f, 0.64f, -0.1f, //H3
        -0.15f, 0.47f, -0.1f, //C3
        -0.26f, 0.6f, -0.1f, //G3

        -0.23f, 0.64f, -0.1f, //H3
        -0.19f, 0.67f, -0.1f, //I3
        -0.13f, 0.57f, -0.1f, //J3

        -0.23f, 0.64f, -0.1f, //H3
        -0.15f, 0.54f, -0.1f, //K3
        -0.13f, 0.57f, -0.1f, //J3

        -0.23f, 0.64f, -0.1f, //H3
        -0.15f, 0.54f, -0.1f, //K3
        -0.16f, 0.51f, -0.1f, //L3

        -0.23f, 0.64f, -0.1f, //H3
        -0.15f, 0.47f, -0.1f, //C3
        -0.16f, 0.51f, -0.1f, //L3

        -0.11f, 0.59f, -0.1f, //M3
        -0.19f, 0.67f, -0.1f, //I3
        -0.13f, 0.57f, -0.1f, //J3

        -0.11f, 0.59f, -0.1f, //M3
        -0.19f, 0.67f, -0.1f, //I3
        -0.07f, 0.61f, -0.1f, //N3

        -0.14f, 0.7f, -0.1f, //O3
        -0.19f, 0.67f, -0.1f, //I3
        -0.07f, 0.61f, -0.1f, //N3

        -0.14f, 0.7f, -0.1f, //O3
        -0.1f, 0.72f, -0.1f, //P3
        -0.07f, 0.61f, -0.1f, //N3

        -0.05f, 0.72f, -0.1f, //Q3
        -0.1f, 0.72f, -0.1f, //P3
        -0.07f, 0.61f, -0.1f, //N3

        -0.05f, 0.72f, -0.1f, //Q3
        0.0f, 0.72f, -0.1f, //R3
        -0.07f, 0.61f, -0.1f, //N3

        -0.01f, 0.62f, -0.1f, //S3
        0.0f, 0.72f, -0.1f, //R3
        -0.07f, 0.61f, -0.1f, //N3

        -0.01f, 0.62f, -0.1f, //S3
        0.0f, 0.72f, -0.1f, //R3
        0.04f, 0.61f, -0.1f, //T3

        0.06f, 0.72f, -0.1f, //U3
        0.0f, 0.72f, -0.1f, //R3
        0.04f, 0.61f, -0.1f, //T3

        0.06f, 0.72f, -0.1f, //U3
        0.11f, 0.7f, -0.1f, //V3
        0.04f, 0.61f, -0.1f, //T3

        0.07f, 0.6f, -0.1f, //W3
        0.11f, 0.7f, -0.1f, //V3
        0.04f, 0.61f, -0.1f, //T3

        0.07f, 0.6f, -0.1f, //W3
        0.11f, 0.7f, -0.1f, //V3
        0.1f, 0.57f, -0.1f, //Z3

        0.16f, 0.68f, -0.1f, //A4
        0.11f, 0.7f, -0.1f, //V3
        0.1f, 0.57f, -0.1f, //Z3

        0.16f, 0.68f, -0.1f, //A4
        0.20f, 0.64f, -0.1f, //B4
        0.1f, 0.57f, -0.1f, //Z3

        0.12f, 0.53f, -0.1f, //C4
        0.20f, 0.64f, -0.1f, //B4
        0.1f, 0.57f, -0.1f, //Z3

        0.12f, 0.53f, -0.1f, //C4
        0.20f, 0.64f, -0.1f, //B4
        0.24f, 0.59f, -0.1f, //D4

        0.12f, 0.53f, -0.1f, //C4
        0.13f, 0.49f, -0.1f, //E4
        0.24f, 0.59f, -0.1f, //D4

        0.26f, 0.54f, -0.1f, //F4
        0.13f, 0.49f, -0.1f, //E4
        0.24f, 0.59f, -0.1f, //D4

        0.27f, 0.48f, -0.1f, //H4
        0.13f, 0.49f, -0.1f, //E4
        0.14f, 0.47f, -0.1f, //G4

        0.27f, 0.48f, -0.1f, //H4
        0.26f, 0.54f, -0.1f, //F4
        0.13f, 0.49f, -0.1f, //E4

        //-------------------------------

        //------------------------------
        //------------------------------
        //--------------------------------
        // unir as duas partes

        //-----------------------------
        //------------------
        0.27f, 0.48f, 0.1f, //H4
        0.14f, 0.47f, 0.1f, //G4
        0.14f, 0.47f, -0.1f, //G4

        0.27f, 0.48f, -0.1f, //H4
        0.27f, 0.48f, 0.1f, //H4
        0.14f, 0.47f, 0.1f, //G4

        0.27f, 0.48f, -0.1f, //H4
        0.27f, 0.48f, 0.1f, //H4
        0.14f, 0.47f, -0.1f, //G4
        //------------------------------------
        0.14f, 0.47f, 0.1f, //G4
        0.13f, 0.49f, 0.1f, //E4
        0.14f, 0.47f, -0.1f, //G4

        0.13f, 0.49f, 0.1f, //E4
        0.13f, 0.49f, -0.1f, //E4
        0.14f, 0.47f, -0.1f, //G4
        //------------------------------------------
        0.12f, 0.53f, 0.1f, //C4
        0.13f, 0.49f, 0.1f, //E4
        0.13f, 0.49f, -0.1f, //E4

        0.12f, 0.53f, -0.1f, //C4
        0.13f, 0.49f, -0.1f, //E4
        0.12f, 0.53f, 0.1f, //C4

        //---------------------------------------------

        0.12f, 0.53f, 0.1f, //C4
        0.12f, 0.53f, -0.1f, //C4
        0.1f, 0.57f, 0.1f, //Z3

        0.1f, 0.57f, -0.1f, //Z3
        0.12f, 0.53f, -0.1f, //C4
        0.1f, 0.57f, 0.1f, //Z3

        //------------------------------------------
        //aqui
        //---------------------------------------------

        0.07f, 0.6f, 0.1f, //W3
        0.1f, 0.57f, -0.1f, //Z3
        0.1f, 0.57f, 0.1f, //Z3

        0.07f, 0.6f, -0.1f, //W3
        0.1f, 0.57f, -0.1f, //Z3
        0.07f, 0.6f, 0.1f, //W3
        //------------------------------------------
        //---------------------------------------------

        0.07f, 0.6f, -0.1f, //W3
        0.07f, 0.6f, 0.1f, //W3
        0.04f, 0.61f, 0.1f, //T3

        0.07f, 0.6f, -0.1f, //W3
        0.04f, 0.61f, 0.1f, //T3
        0.04f, 0.61f, -0.1f, //T3
        //------------------------------------------
        -0.01f, 0.62f, 0.1f, //S3
        0.04f, 0.61f, 0.1f, //T3
        0.04f, 0.61f, -0.1f, //T3

        -0.01f, 0.62f, 0.1f, //S3
        -0.01f, 0.62f, -0.1f, //S3
        0.04f, 0.61f, -0.1f, //T3
        //---------------------------------------------
        -0.01f, 0.62f, -0.1f, //S3
        -0.01f, 0.62f, 0.1f, //S3
        -0.07f, 0.61f, 0.1f, //N3

        -0.01f, 0.62f, -0.1f, //S3
        -0.07f, 0.61f, -0.1f, //N3
        -0.07f, 0.61f, 0.1f, //N3
        //-----------------------------------------
        //---------------------------------------------
        -0.11f, 0.59f, 0.1f, //M3
        -0.07f, 0.61f, 0.1f, //N3
        -0.07f, 0.61f, -0.1f, //N3

        -0.11f, 0.59f, 0.1f, //M3
        -0.11f, 0.59f, -0.1f, //M3
        -0.07f, 0.61f, -0.1f, //N3
        //------------------------------------------
        //---------------------------------------------
        -0.11f, 0.59f, -0.1f, //M3
        -0.11f, 0.59f, 0.1f, //M3
        -0.13f, 0.57f, 0.1f, //J3

        -0.11f, 0.59f, -0.1f, //M3
        -0.13f, 0.57f, -0.1f, //J3
        -0.13f, 0.57f, 0.1f, //J3
        //------------------------------------------
        //---------------------------------------------

        -0.13f, 0.57f, 0.1f, //J3
        -0.15f, 0.54f, 0.1f, //K3
        -0.13f, 0.57f, -0.1f, //J3

        -0.15f, 0.54f, 0.1f, //K3
        -0.15f, 0.54f, -0.1f, //K3
        -0.13f, 0.57f, -0.1f, //J3
        //------------------------------------------
        
        -0.15f, 0.54f, 0.1f, //K3
        -0.15f, 0.54f, -0.1f, //K3
        -0.16f, 0.51f, 0.1f, //L3

        -0.16f, 0.51f, -0.1f, //L3
        -0.15f, 0.54f, -0.1f, //K3
        -0.16f, 0.51f, 0.1f, //L3

        //-------------

        -0.16f, 0.51f, 0.1f, //L3
        -0.15f, 0.47f, 0.1f, //C3
        -0.16f, 0.51f, -0.1f, //L3

        -0.15f, 0.47f, -0.1f, //C3
        -0.15f, 0.47f, 0.1f, //C3
        -0.16f, 0.51f, -0.1f, //L3

        //-----------
        
        -0.13f, 0.43f, 0.1f, //A3
        -0.15f, 0.47f, -0.1f, //C3
        -0.15f, 0.47f, 0.1f, //C3

        -0.13f, 0.43f, 0.1f, //A3
        -0.15f, 0.47f, -0.1f, //C3
        -0.13f, 0.43f, -0.1f, //A3

        //----------------

        -0.01f, 0.34f, 0.1f, //P2
        -0.13f, 0.43f, -0.1f, //A3
        -0.13f, 0.43f, 0.1f, //A3

        -0.01f, 0.34f, 0.1f, //P2
        -0.13f, 0.43f, -0.1f, //A3
        -0.01f, 0.34f, -0.1f, //P2

        //--------------------

        -0.01f, 0.34f, -0.1f, //P2
        -0.01f, 0.34f, 0.1f, //P2
        0.16f, 0.24f, 0.1f, //Q2

        -0.01f, 0.34f, -0.1f, //P2
        0.16f, 0.24f, -0.1f, //Q2
        0.16f, 0.24f, 0.1f, //Q2

        //-------------------------

        0.16f, 0.24f, 0.1f, //Q2
        0.25f, 0.17f, 0.1f, //S2
        0.16f, 0.24f, -0.1f, //Q2

        0.25f, 0.17f, -0.1f, //S2
        0.25f, 0.17f, 0.1f, //S2
        0.16f, 0.24f, -0.1f, //Q2

        //------------------------
        
        0.3f, 0.12f, 0.1f, //Z2
        0.25f, 0.17f, 0.1f, //S2
        0.25f, 0.17f, -0.1f, //S2

        0.3f, 0.12f, 0.1f, //Z2
        0.3f, 0.12f, -0.1f, //Z2
        0.25f, 0.17f, -0.1f, //S2

        //_--------------------
        0.3f, 0.12f, -0.1f, //Z2
         0.3f, 0.12f, 0.1f, //Z2
        0.33f, 0.04f, 0.1f, //V2

        0.3f, 0.12f, -0.1f, //Z2
        0.33f, 0.04f, -0.1f, //V2
        0.33f, 0.04f, 0.1f, //V2 

        //----------------------
        //_--------------
        //----------------
        //_--------------

        //_------
        
        0.32f, -0.08f, 0.1f, //Z1
        0.33f, -0.02f, -0.1f, //T2
        0.33f, -0.02f, 0.1f, //T2

        0.32f, -0.08f, 0.1f, //Z1
        0.33f, -0.02f, -0.1f, //T2
         0.32f, -0.08f, -0.1f, //Z1
        //--------------------
        0.32f, -0.08f, 0.1f, //Z1
        0.29f, -0.13f, 0.1f, //V1
        0.32f, -0.08f, -0.1f, //Z1 

        0.29f, -0.13f, -0.1f, //V1
        0.29f, -0.13f, 0.1f, //V1
        0.32f, -0.08f, -0.1f, //Z1 
        //--------------------

        0.29f, -0.13f, -0.1f, //V1
        0.29f, -0.13f, 0.1f, //V1
        0.25f, -0.17f, 0.1f, //T1 

        0.29f, -0.13f, -0.1f, //V1
        0.25f, -0.17f, -0.1f, //T1 
        0.25f, -0.17f, 0.1f, //T1 
        //--------------------
        0.17f, -0.20f, 0.1f, //M1
        0.25f, -0.17f, 0.1f, //T1
        0.25f, -0.17f, -0.1f, //T1

        0.17f, -0.20f, 0.1f, //M1
        0.17f, -0.20f, -0.1f, //M1
        0.25f, -0.17f, -0.1f, //T1
        //--------------------
        0.17f, -0.20f, -0.1f, //M1
        0.20f, -0.23f, 0.1f, //L1
        0.17f, -0.20f, 0.1f, //M1 
        
        0.17f, -0.20f, -0.1f, //M1
        0.20f, -0.23f, 0.1f, //L1
        0.20f, -0.23f, -0.1f, //L1  
        //--------------------
        0.20f, -0.23f, 0.1f, //L1
        0.20f, -0.23f, -0.1f, //L1
        0.24f, -0.27f, 0.1f, //J1 

        0.24f, -0.27f, -0.1f, //J1 
        0.20f, -0.23f, -0.1f, //L1
        0.24f, -0.27f, 0.1f, //J1 
        //--------------------
        0.26f, -0.31f, 0.1f, //G1
        0.24f, -0.27f, -0.1f, //J1 
        0.24f, -0.27f, 0.1f, //J1

        0.26f, -0.31f, 0.1f, //G1
        0.24f, -0.27f, -0.1f, //J1 
        0.26f, -0.31f, -0.1f, //G1 
        //--------------------
        0.26f, -0.31f, 0.1f, //G1
        0.26f, -0.31f, -0.1f, //G1
        0.28f, -0.35f, 0.1f, //F1

        0.28f, -0.35f, -0.1f, //F1
        0.26f, -0.31f, -0.1f, //G1
        0.28f, -0.35f, 0.1f, //F1
        //--------------------
        0.29f, -0.39f, 0.1f, //D1
        0.28f, -0.35f, -0.1f, //F1 
        0.28f, -0.35f, 0.1f, //F1 

        0.29f, -0.39f, 0.1f, //D1
        0.28f, -0.35f, -0.1f, //F1 
        0.29f, -0.39f, -0.1f, //D1
        //--------------------
        0.29f, -0.39f, 0.1f, //D1
        0.29f, -0.43f, 0.1f, //C1
        0.29f, -0.39f, -0.1f, //D1

        0.29f, -0.43f, -0.1f, //C1
        0.29f, -0.43f, 0.1f, //C1
        0.29f, -0.39f, -0.1f, //D1
        //--------------------
        0.27f, -0.49f, 0.1f, //A1
        0.29f, -0.43f, 0.1f, //C1
        0.27f, -0.49f, -0.1f, //A1 

        0.29f, -0.43f, -0.1f, //C1
        0.29f, -0.43f, 0.1f, //C1
        0.27f, -0.49f, -0.1f, //A1 
        //--------------------
        0.27f, -0.49f, -0.1f, //A1
        0.27f, -0.49f, 0.1f, //A1
        0.23f, -0.55f, 0.1f, //Z 

        0.27f, -0.49f, -0.1f, //A1
        0.23f, -0.55f, -0.1f, //Z 
        0.23f, -0.55f, 0.1f, //Z 
        //--------------------
        
         0.18f, -0.59f, 0.1f, //V
        0.23f, -0.55f, -0.1f, //Z 
        0.23f, -0.55f, 0.1f, //Z 

        0.18f, -0.59f, 0.1f, //V
        0.23f, -0.55f, -0.1f, //Z 
        0.18f, -0.59f, -0.1f, //V
        //--------------------
        0.18f, -0.59f, 0.1f, //V
        0.12f, -0.62f, 0.1f, //S
        0.18f, -0.59f, -0.1f, //V

        0.12f, -0.62f, -0.1f, //S
        0.12f, -0.62f, 0.1f, //S
        0.18f, -0.59f, -0.1f, //V
        
        //--------------------
        //------------------
        //--------------
        0.06f, -0.63f, 0.1f, //R
        0.12f, -0.62f, 0.1f, //S
        0.12f, -0.62f, -0.1f, //S  

        0.06f, -0.63f, 0.1f, //R
        0.06f, -0.63f, -0.1f, //R
        0.12f, -0.62f, -0.1f, //S  
        //--------------------
        0.06f, -0.63f, 0.1f, //R
        -0.01f, -0.63f, 0.1f, //P
        0.06f, -0.63f, -0.1f, //R 

        -0.01f, -0.63f, -0.1f, //P
        -0.01f, -0.63f, 0.1f, //P
        0.06f, -0.63f, -0.1f, //R 
        //--------------------
        0.33f, 0.04f, -0.1f, //V2
        0.33f, -0.02f, 0.1f, //T2
        0.33f, 0.04f, 0.1f, //V2 

        0.33f, 0.04f, -0.1f, //V2
        0.33f, -0.02f, 0.1f, //T2
        0.33f, -0.02f, -0.1f, //T2

        //--------------------


        -0.06f, -0.63f, -0.1f, //O 
        -0.01f, -0.63f, 0.1f, //P
        -0.06f, -0.63f, 0.1f, //O 

        -0.06f, -0.63f, -0.1f, //O 
        -0.01f, -0.63f, 0.1f, //P
        -0.01f, -0.63f, -0.1f, //P
        //--------------------
        -0.06f, -0.63f, -0.1f, //O 
        -0.14f, -0.61f, 0.1f, //M
        -0.06f, -0.63f, 0.1f, //O 

        -0.06f, -0.63f, -0.1f, //O 
        -0.14f, -0.61f, -0.1f, //M
        -0.14f, -0.61f, 0.1f, //M 
        //--------------------
        -0.200f, -0.58f, 0.1f, //K
        -0.14f, -0.61f, 0.1f, //M
        -0.14f, -0.61f, -0.1f, //M 

        -0.20f, -0.58f, 0.1f, //K
        -0.20f, -0.58f, -0.1f, //K
        -0.14f, -0.61f, -0.1f, //M 
        //--------------------
        -0.24f, -0.54f, 0.1f, //I 
        -0.20f, -0.58f, 0.1f, //K
        -0.20f, -0.58f, -0.1f, //K

        -0.24f, -0.54f, 0.1f, //I 
        -0.24f, -0.54f, -0.1f, //I 
        -0.20f, -0.58f, -0.1f, //K
        //--------------------
        -0.27f, -0.50f, 0.1f, //G 
        -0.24f, -0.54f, 0.1f, //I
        -0.24f, -0.54f, -0.1f, //I 

        -0.27f, -0.50f, 0.1f, //G 
        -0.27f, -0.50f, -0.1f, //G
        -0.24f, -0.54f, -0.1f, //I 
        //--------------------
        -0.29f, -0.44f, 0.1f, //F 
        -0.27f, -0.50f, 0.1f, //G
        -0.27f, -0.50f, -0.1f, //G

        -0.29f, -0.44f, 0.1f, //F 
        -0.29f, -0.44f, -0.1f, //F 
        -0.27f, -0.50f, -0.1f, //G

        //--------------------
        -0.3f, -0.38f, 0.1f, //C 
        -0.29f, -0.44f, 0.1f, //F
        -0.29f, -0.44f, -0.1f, //F

        -0.3f, -0.38f, 0.1f, //C 
        -0.3f, -0.38f, -0.1f, //C 
        -0.29f, -0.44f, -0.1f, //F
        //--------------------
        -0.3f, -0.38f, 0.1f, //C
        -0.17f, -0.36f, 0.1f, //D
        -0.3f, -0.38f, -0.1f, //C

        -0.17f, -0.36f, -0.1f, //D
        -0.17f, -0.36f, 0.1f, //D
        -0.3f, -0.38f, -0.1f, //C
        //--------------------
        -0.17f, -0.36f, -0.1f, //D
        -0.17f, -0.36f, 0.1f, //D
        -0.16f, -0.41f, 0.1f, //E

        -0.17f, -0.36f, -0.1f, //D
        -0.16f, -0.41f, -0.1f, //E
        -0.16f, -0.41f, 0.1f, //E

        //--------------------        
        -0.16f, -0.41f, 0.1f, //E  
        -0.14f, -0.46f, 0.1f, //H
        -0.16f, -0.41f, -0.1f, //E

        -0.14f, -0.46f, -0.1f, //H  
        -0.14f, -0.46f, 0.1f, //H
        -0.16f, -0.41f, -0.1f, //E
        //--------------------
        -0.14f, -0.46f, 0.1f, //H
        -0.12f, -0.49f, 0.1f, //J 
        -0.14f, -0.46f, -0.1f, //H

        -0.12f, -0.49f, -0.1f, //J
        -0.12f, -0.49f, 0.1f, //J 
        -0.14f, -0.46f, -0.1f, //H
        //--------------------
        -0.12f, -0.49f, -0.1f, //J
        -0.12f, -0.49f, 0.1f, //J
        -0.07f, -0.52f, 0.1f, //L

        -0.12f, -0.49f, -0.1f, //J
        -0.07f, -0.52f, -0.1f, //L
        -0.07f, -0.52f, 0.1f, //L
        //--------------------
        -0.02f, -0.53f, 0.1f, //N
        -0.07f, -0.52f, -0.1f, //L
        -0.07f, -0.52f, 0.1f, //L

        -0.02f, -0.53f, 0.1f, //N
        -0.07f, -0.52f, -0.1f, //L
        -0.02f, -0.53f, -0.1f, //N
        //--------------------
        -0.02f, -0.53f, 0.1f, //N
        -0.02f, -0.53f, -0.1f, //N
        0.03f, -0.53f, 0.1f, //Q 

        0.03f, -0.53f, -0.1f, //Q 
        -0.02f, -0.53f, -0.1f, //N
        0.03f, -0.53f, 0.1f, //Q 
        //--------------------
        0.08f, -0.52f, 0.1f, //T
        0.03f, -0.53f, -0.1f, //Q  
        0.03f, -0.53f, 0.1f, //Q 

        0.08f, -0.52f, 0.1f, //T
        0.03f, -0.53f, -0.1f, //Q  
        0.08f, -0.52f, -0.1f, //T
 
        //--------------------
        0.08f, -0.52f, 0.1f, //T
        0.08f, -0.52f, -0.1f, //T
        0.12f, -0.49f, 0.1f, //U

        0.12f, -0.49f, -0.1f, //U
        0.08f, -0.52f, -0.1f, //T
        0.12f, -0.49f, 0.1f, //U
        //--------------------
        0.12f, -0.49f, -0.1f, //U 
        0.15f, -0.45f, 0.1f, //W
        0.12f, -0.49f, 0.1f, //U 

        0.12f, -0.49f, -0.1f, //U 
        0.15f, -0.45f, 0.1f, //W
        0.15f, -0.45f, -0.1f, //W

        //--------------------
        0.15f, -0.45f, -0.1f, //W
        0.15f, -0.45f, 0.1f, //W
        0.16f, -0.41f, 0.1f, //B1

        0.15f, -0.45f, -0.1f, //W
        0.16f, -0.41f, -0.1f, //B1 
        0.16f, -0.41f, 0.1f, //B1 
        //--------------------
        0.16f, -0.41f, -0.1f, //B1
        0.15f, -0.37f, 0.1f, //E1
        0.16f, -0.41f, 0.1f, //B1

        0.16f, -0.41f, -0.1f, //B1
        0.15f, -0.37f, 0.1f, //E1
        0.15f, -0.37f, -0.1f, //E1
        //------------
        0.15f, -0.37f, -0.1f, //E1
        0.15f, -0.37f, 0.1f, //E1
        0.14f, -0.34f, 0.1f, //H1 

        0.15f, -0.37f, -0.1f, //E1
        0.14f, -0.34f, -0.1f, //H1
        0.14f, -0.34f, 0.1f, //H1  
        //--------------------
        0.14f, -0.34f, -0.1f, //H1 
        0.11f, -0.32f, 0.1f, //I1
        0.14f, -0.34f, 0.1f, //H1 

        0.14f, -0.34f, -0.1f, //H1 
        0.11f, -0.32f, 0.1f, //I1
        0.11f, -0.32f, -0.1f, //I1
        
        //------------
        0.03f, -0.25f, 0.1f, //K1
        0.11f, -0.32f, 0.1f, //I1
        0.11f, -0.32f, -0.1f, //I1

        0.03f, -0.25f, 0.1f, //K1
        0.03f, -0.25f, -0.1f, //K1
        0.11f, -0.32f, -0.1f, //I1
        //--------------------
         0.03f, -0.25f, 0.1f, //K1
        -0.22f, -0.1f, 0.1f, //N1
        0.03f, -0.25f, -0.1f, //K1

        -0.22f, -0.1f, -0.1f, //N1
        -0.22f, -0.1f, 0.1f, //N1
        0.03f, -0.25f, -0.1f, //K1
    
        //------------
        -0.28f, -0.05f, 0.1f, //A2
        -0.22f, -0.1f, 0.1f, //N1
        -0.22f, -0.1f, -0.1f, //N1

        -0.28f, -0.05f, 0.1f, //A2
        -0.28f, -0.05f, -0.1f, //A2
        -0.22f, -0.1f, -0.1f, //N1
        //--------------------
        -0.28f, -0.05f, 0.1f, //A2
        -0.28f, -0.05f, -0.1f, //A2
        -0.33f, 0.04f, 0.1f, //C2

        -0.33f, 0.04f, -0.1f, //C2
        -0.28f, -0.05f, -0.1f, //A2
        -0.33f, 0.04f, 0.1f, //C2

        //------------
        
        -0.34f, 0.09f, 0.1f, //D2
        -0.33f, 0.04f, -0.1f, //C2
        -0.33f, 0.04f, 0.1f, //C2

        -0.34f, 0.09f, 0.1f, //D2
        -0.33f, 0.04f, -0.1f, //C2
        -0.34f, 0.09f, -0.1f, //D2
        //--------------------
        -0.34f, 0.09f, 0.1f, //D2
        -0.34f, 0.09f, -0.1f, //D2
        -0.34f, 0.16f, 0.1f, //G2

        -0.34f, 0.16f, -0.1f, //G2
        -0.34f, 0.09f, -0.1f, //D2
        -0.34f, 0.16f, 0.1f, //G2

        //------------

        -0.32f, 0.22f, 0.1f, //H2
        -0.34f, 0.16f, -0.1f, //G2
        -0.34f, 0.16f, 0.1f, //G2

        -0.32f, 0.22f, 0.1f, //H2
        -0.34f, 0.16f, -0.1f, //G2
        -0.32f, 0.22f, -0.1f, //H2
        //--------------------
        -0.32f, 0.22f, 0.1f, //H2
        -0.29f, 0.27f, 0.1f, //J2
        -0.32f, 0.22f, -0.1f, //H2

        -0.29f, 0.27f, -0.1f, //J2
        -0.29f, 0.27f, 0.1f, //J2
        -0.32f, 0.22f, -0.1f, //H2
        
        //------------
        -0.23f, 0.31f, 0.1f, //K2
        -0.29f, 0.27f, 0.1f, //J2
        -0.29f, 0.27f, -0.1f, //J2

        -0.23f, 0.31f, 0.1f, //K2
        -0.23f, 0.31f, -0.1f, //K2
        -0.29f, 0.27f, -0.1f, //J2
        //--------------------
        -0.23f, 0.31f, 0.1f, //K2
        -0.19f, 0.32f, 0.1f, //L2
        -0.23f, 0.31f, -0.1f, //K2

        -0.19f, 0.32f, -0.1f, //L2
        -0.19f, 0.32f, 0.1f, //L2
        -0.23f, 0.31f, -0.1f, //K2
        
        //------------
        -0.19f, 0.32f, -0.1f, //L2
        -0.19f, 0.32f, 0.1f, //L2
        -0.24f, 0.38f, 0.1f, //B3

         -0.19f, 0.32f, -0.1f, //L2
        -0.24f, 0.38f, -0.1f, //B3
        -0.24f, 0.38f, 0.1f, //B3
        //--------------------
        -0.27f, 0.43f, 0.1f, //D3
        -0.24f, 0.38f, -0.1f, //B3
        -0.24f, 0.38f, 0.1f, //B3

        -0.27f, 0.43f, 0.1f, //D3
        -0.24f, 0.38f, -0.1f, //B3
        -0.27f, 0.43f, -0.1f, //D3
    
        //------------
         -0.27f, 0.43f, 0.1f, //D3
        -0.27f, 0.43f, -0.1f, //D3
        -0.28f, 0.49f, 0.1f, //E3

        -0.28f, 0.49f, -0.1f, //E3
        -0.27f, 0.43f, -0.1f, //D3
        -0.28f, 0.49f, 0.1f, //E3
        //--------------------
        -0.28f, 0.54f, 0.1f, //F3
        -0.28f, 0.49f, -0.1f, //E3
        -0.28f, 0.49f, 0.1f, //E3

        -0.28f, 0.54f, 0.1f, //F3
        -0.28f, 0.49f, -0.1f, //E3
        -0.28f, 0.54f, -0.1f, //F3      
        //------------
        -0.28f, 0.54f, 0.1f, //F3
        -0.28f, 0.54f, -0.1f, //F3
        -0.26f, 0.6f, 0.1f, //G3

        -0.26f, 0.6f, -0.1f, //G3
        -0.28f, 0.54f, -0.1f, //F3
        -0.26f, 0.6f, 0.1f, //G3
        //--------------------

        -0.23f, 0.64f, 0.1f, //H3
        -0.26f, 0.6f, -0.1f, //G3
        -0.26f, 0.6f, 0.1f, //G3

        -0.23f, 0.64f, 0.1f, //H3
        -0.26f, 0.6f, -0.1f, //G3
        -0.23f, 0.64f, -0.1f, //H3
        //------------
        -0.23f, 0.64f, 0.1f, //H3
        -0.19f, 0.67f, 0.1f, //I3
        -0.23f, 0.64f, -0.1f, //H3

        -0.19f, 0.67f, -0.1f, //I3
        -0.19f, 0.67f, 0.1f, //I3
        -0.23f, 0.64f, -0.1f, //H3
        //--------------------
        -0.14f, 0.7f, 0.1f, //O3
        -0.19f, 0.67f, 0.1f, //I3
        -0.19f, 0.67f, -0.1f, //I3

        -0.14f, 0.7f, 0.1f, //O3
        -0.14f, 0.7f, -0.1f, //O3
        -0.19f, 0.67f, -0.1f, //I3
        //------------
        -0.14f, 0.7f, 0.1f, //O3
        -0.1f, 0.72f, 0.1f, //P3
        -0.14f, 0.7f, -0.1f, //O3

        -0.1f, 0.72f, -0.1f, //P3
        -0.1f, 0.72f, 0.1f, //P3
        -0.14f, 0.7f, -0.1f, //O3
        //--------------------
        -0.05f, 0.72f, 0.1f, //Q3
        -0.1f, 0.72f, 0.1f, //P3
        -0.1f, 0.72f, -0.1f, //P3

        -0.05f, 0.72f, 0.1f, //Q3
        -0.05f, 0.72f, -0.1f, //Q3
        -0.1f, 0.72f, -0.1f, //P3
        //------------
        -0.05f, 0.72f, 0.1f, //Q3
        0.0f, 0.72f, 0.1f, //R3
        -0.05f, 0.72f, -0.1f, //Q3

        0.0f, 0.72f, -0.1f, //R3
        0.0f, 0.72f, 0.1f, //R3
        -0.05f, 0.72f, -0.1f, //Q3
        //--------------------
        0.06f, 0.72f, 0.1f, //U3
        0.0f, 0.72f, 0.1f, //R3
        0.0f, 0.72f, -0.1f, //R3

        0.06f, 0.72f, 0.1f, //U3
        0.06f, 0.72f, -0.1f, //U3
        0.0f, 0.72f, -0.1f, //R3
        //------------
        0.06f, 0.72f, 0.1f, //U3
        0.11f, 0.7f, 0.1f, //V3
        0.06f, 0.72f, -0.1f, //U3

        0.11f, 0.7f, -0.1f, //V3
        0.11f, 0.7f, 0.1f, //V3
        0.06f, 0.72f, -0.1f, //U3
        //--------------------
        0.16f, 0.68f, 0.1f, //A4
        0.11f, 0.7f, 0.1f, //V3
        0.11f, 0.7f, -0.1f, //V3

        0.16f, 0.68f, 0.1f, //A4
        0.16f, 0.68f, -0.1f, //A4
        0.11f, 0.7f, -0.1f, //V3

        //------------
        0.16f, 0.68f, 0.1f, //A4
        0.20f, 0.64f, 0.1f, //B4
        0.16f, 0.68f, -0.1f, //A4

        0.20f, 0.64f, -0.1f, //B4
        0.20f, 0.64f, 0.1f, //B4
        0.16f, 0.68f, -0.1f, //A4
        //--------------------
        0.20f, 0.64f, -0.1f, //B4
        0.20f, 0.64f, 0.1f, //B4
        0.24f, 0.59f, 0.1f, //D4

        0.20f, 0.64f, -0.1f, //B4
        0.24f, 0.59f, -0.1f, //D4
        0.24f, 0.59f, 0.1f, //D4
        
        //------------
        0.26f, 0.54f, 0.1f, //F4
        0.24f, 0.59f, -0.1f, //D4
        0.24f, 0.59f, 0.1f, //D4

        0.26f, 0.54f, 0.1f, //F4
        0.24f, 0.59f, -0.1f, //D4
        0.26f, 0.54f, -0.1f, //F4
        //--------------------
        0.27f, 0.48f, 0.1f, //H4
        0.26f, 0.54f, 0.1f, //F4
        0.26f, 0.54f, -0.1f, //F4

        0.27f, 0.48f, 0.1f, //H4
        0.27f, 0.48f, -0.1f, //H4
        0.26f, 0.54f, -0.1f, //F4
        //------------
        -0.13f, 0.28f, -0.1f, //N2
        -0.02f, 0.20f, 0.1f, //O2
        -0.13f, 0.28f, 0.1f, //N2

        -0.13f, 0.28f, -0.1f, //N2
        -0.02f, 0.20f, 0.1f, //O2
        -0.02f, 0.20f, -0.1f, //O2
        //--------------------
        0.13f, 0.1f, 0.1f, //R2
        -0.02f, 0.20f, 0.1f, //O2
        -0.02f, 0.20f, -0.1f, //O2

        0.13f, 0.1f, 0.1f, //R2
        0.13f, 0.1f, -0.1f, //R2
        -0.02f, 0.20f, -0.1f, //O2
        //------------
        0.13f, 0.1f, 0.1f, //R2
        0.19f, 0.05f, 0.1f, //W2
        0.13f, 0.1f, -0.1f, //R2

        0.19f, 0.05f, -0.1f, //W2
        0.19f, 0.05f, 0.1f, //W2
        0.13f, 0.1f, -0.1f, //R2
        
        //---------------
        0.21f, -0.01f, 0.1f, //U2
        0.19f, 0.05f, 0.1f, //W2
        0.19f, 0.05f, -0.1f, //W2

        0.21f, -0.01f, 0.1f, //U2
        0.21f, -0.01f, -0.1f, //U2
        0.19f, 0.05f, -0.1f, //W2
         //------------
        0.21f, -0.01f, 0.1f, //U2
        0.21f, -0.01f, -0.1f, //U2
        0.21f, -0.05f, 0.1f, //W1

        0.21f, -0.05f, -0.1f, //W1
        0.21f, -0.01f, -0.1f, //U2
        0.21f, -0.05f, 0.1f, //W1
        
        //---------------
        0.18f, -0.1f, 0.1f, //U1
        0.21f, -0.05f, -0.1f, //W1 
        0.21f, -0.05f, 0.1f, //W1 

        0.18f, -0.1f, 0.1f, //U1
        0.21f, -0.05f, -0.1f, //W1 
        0.18f, -0.1f, -0.1f, //U1
         //------------
        0.18f, -0.1f, 0.1f, //U1
        0.16f, -0.13f, 0.1f, //S1
        0.18f, -0.1f, -0.1f, //U1

        0.16f, -0.13f, -0.1f, //S1
        0.16f, -0.13f, 0.1f, //S1
        0.18f, -0.1f, -0.1f, //U1
        //---------------
        0.16f, -0.13f, -0.1f, //S1
        0.16f, -0.13f, 0.1f, //S1
        0.11f, -0.16f, 0.1f, //R1

        0.16f, -0.13f, -0.1f, //S1
        0.11f, -0.16f, -0.1f, //R1
        0.11f, -0.16f, 0.1f, //R1
        //---------------
        0.11f, -0.16f, -0.1f, //R1  
        0.0f, -0.09f, 0.1f, //P1
        0.11f, -0.16f, 0.1f, //R1 

        0.11f, -0.16f, -0.1f, //R1  
        0.0f, -0.09f, 0.1f, //P1
        0.0f, -0.09f, -0.1f, //P1
        //------------
        0.0f, -0.09f, -0.1f, //P1
        0.0f, -0.09f, 0.1f, //P1
        -0.12f, -0.01f, 0.1f, //O1

        0.0f, -0.09f, -0.1f, //P1
        -0.12f, -0.01f, -0.1f, //O1
        -0.12f, -0.01f, 0.1f, //O1
         //------------
        -0.12f, -0.01f, -0.1f, //O1
        -0.21f, 0.06f, 0.1f, //B2
        -0.12f, -0.01f, 0.1f, //O1

        -0.12f, -0.01f, -0.1f, //O1
        -0.21f, 0.06f, 0.1f, //B2
        -0.21f, 0.06f, -0.1f, //B2
        //---------------
        -0.21f, 0.06f, -0.1f, //B2
        -0.21f, 0.06f, 0.1f, //B2
        -0.24f, 0.13f, 0.1f, //E2

        -0.21f, 0.06f, -0.1f, //B2
        -0.24f, 0.13f, -0.1f, //E2
        -0.24f, 0.13f, 0.1f, //E2
         //------------
        -0.24f, 0.13f, -0.1f, //E2
        -0.23f, 0.18f, 0.1f, //F2
        -0.24f, 0.13f, 0.1f, //E2

        -0.24f, 0.13f, -0.1f, //E2
        -0.23f, 0.18f, 0.1f, //F2
        -0.23f, 0.18f, -0.1f, //F2

        //---------------
        -0.23f, 0.18f, -0.1f, //F2
        -0.23f, 0.18f, 0.1f, //F2
        -0.20f, 0.22f, 0.1f, //I2

        -0.23f, 0.18f, -0.1f, //F2
        -0.20f, 0.22f, -0.1f, //I2
        -0.20f, 0.22f, 0.1f, //I2
         //------------
        -0.16f, 0.26f, 0.1f, //M2
        -0.20f, 0.22f, -0.1f, //I2
        -0.20f, 0.22f, 0.1f, //I2

        -0.16f, 0.26f, 0.1f, //M2
        -0.20f, 0.22f, -0.1f, //I2
        -0.16f, 0.26f, -0.1f, //M2
        
        //---------------
        -0.16f, 0.26f, 0.1f, //M2
        -0.16f, 0.26f, -0.1f, //M2
        -0.13f, 0.28f, 0.1f, //N2

        -0.13f, 0.28f, -0.1f, //N2
        -0.16f, 0.26f, -0.1f, //M2
        -0.13f, 0.28f, 0.1f, //N2
        //---------------
        //---------------
        //------------
        //_------

    };

    sizeof(vertices);


  static float colors[3662];

  //Generate random colors
  for(int i = 0; i<3663; i++)
    colors[i] = static_cast <float> (rand()) / static_cast <float> (RAND_MAX);




//------------------------------------------------------------    
    // uncomment this call to draw in wireframe polygons.
    //glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);
    
    //------------------------------------------------------------
    unsigned int VAO;
    glGenVertexArrays(1, &VAO);
    glBindVertexArray(VAO);



//------------------------------------------------------------
    unsigned int VBO;
    glGenBuffers(1, &VBO);
    glBindBuffer(GL_ARRAY_BUFFER, VBO);
    glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);

    
    
    unsigned int EBO;
    glGenBuffers(1, &EBO);
    glBindBuffer(GL_ARRAY_BUFFER, EBO);
    glBufferData(GL_ARRAY_BUFFER, sizeof(colors), colors, GL_STATIC_DRAW);

    
   // build and compile our shader program
    // ------------------------------------
    // vertex shader
    unsigned int vertexShader = glCreateShader(GL_VERTEX_SHADER);
    glShaderSource(vertexShader, 1, &vertexShaderSource, NULL);
    glCompileShader(vertexShader);
    // check for vertex shader compile errors
    int success;
    char infoLog[512];
    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(vertexShader, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::VERTEX::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // fragment shader
    unsigned int fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);
    glShaderSource(fragmentShader, 1, &fragmentShaderSource, NULL);
    glCompileShader(fragmentShader);
    // check for fragment shader compile errors
    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(fragmentShader, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n" << infoLog << std::endl;
    }

    // link shaders : puts together the vertex and the fragment shaders
    // into a "shader program object"
    unsigned int shaderProgram = glCreateProgram();
    glAttachShader(shaderProgram, vertexShader);
    glAttachShader(shaderProgram, fragmentShader);
    glLinkProgram(shaderProgram);
    // check for shader linking errors
    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &success);
    if (!success) {
        glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::PROGRAM::LINKING_FAILED\n" << infoLog << std::endl;
    }
    
    //------------------------------------------------------------
    // Get a handle for our "MVP" uniform
    unsigned int MatrixID = glGetUniformLocation(shaderProgram, "MVP");

    //------------------------------------------------------------
        // display range : 0.1 unit <-> 100 units
    glm::mat4 Projection = glm::ortho(-1.7f, 1.7f, -1.7f, 1.7f, 0.0f, 100.0f);
    // View camera matrix
    glm::mat4 View = glm::lookAt(
                     glm::vec3(0,0,10), 
                     glm::vec3(0,0,0), // and looks at the origin
                     glm::vec3(0,1,0)  // Head is up (set to 0,-1,0 to look upside-down)
	      );
    // Model matrix : an identity matrix (model will be at the origin)
    glm::mat4 Model = glm::mat4(0.50f);
    Model = glm::rotate(Model, glm::radians(30.0f), glm::vec3(0.0f, 1.0f, 0.0f));
    // Our ModelViewProjection : multiplication of our 3 matrices
    // Remember, matrix multiplication is the other way around
    glm::mat4 MVP   = Projection * View * Model; 
    


    // delete shaders, we don't need them anymore
    glDeleteShader(vertexShader);
    glDeleteShader(fragmentShader);




  int a[3] = {0,0,4};

  // render loop
  // -----------
  while (!glfwWindowShouldClose(window))
    {

      glm::mat4 MVP   = Projection * View * Model; 
      View = processInput(window, View);

            // render
      // ------
      //glClearColor(0.50f, 0.50f, 0.50f, 0.50f); //grey rendering
      glClearColor(0.0f, 0.0f, 0.4f, 0.0f);
      
        // Enable depth test
        glEnable(GL_DEPTH_TEST);  
        // Accept fragment if it closer to the camera than the former one
        glDepthFunc(GL_LESS); 

        // also clear the depth buffer now!
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); 

      // draw our first triangle: using shader program
      glUseProgram(shaderProgram);
      glBindVertexArray(VAO);


      // Send our transformation to the currently bound shader, 
	// in the "MVP" uniform
	glUniformMatrix4fv(MatrixID, 1, GL_FALSE, &MVP[0][0]);
          // 1rst attribute buffer : vertices
	glEnableVertexAttribArray(0);
	glBindBuffer(GL_ARRAY_BUFFER, VBO);
	glVertexAttribPointer(
		0,            // attribute. No particular reason for 0, but
		              // must match the layout in the shader.
		3,            // size
		GL_FLOAT,     // type
		GL_FALSE,     // normalized?
		0,            // stride
		(void*)0      // array buffer offset
	);

	// 2nd attribute buffer : colors
	glEnableVertexAttribArray(1);
  glBindBuffer(GL_ARRAY_BUFFER, EBO);
	glVertexAttribPointer(
		1,            // attribute. No particular reason for 1, but
		              // must match the layout in the shader.
		3,            // size
		GL_FLOAT,     // type
		GL_FALSE,     // normalized?
		0,            // stride
		(void*)0      // array buffer offset
	);

      // seeing as we only have a single VAO there's no need to bind
      // it every time, but we'll do so to keep things a bit more organized
      glDrawArrays(GL_TRIANGLES, 0, sizeof(vertices)/3);
      // glBindVertexArray(0); // no need to unbind it every time 
      
      /* glfw: swap buffers and poll IO events (keys pressed/released, 
	 mouse moved etc.)
	 --------------------------------------------------------------*/
      glfwSwapBuffers(window);
      glfwPollEvents();
    }

    

    // optional: de-allocate all resources once they've outlived their purpose:
    // ------------------------------------------------------------------------
    glDeleteVertexArrays(1, &VAO);
    glDeleteBuffers(1, &VBO);
    glDeleteProgram(shaderProgram);

  // glfw: terminate, clearing all previously allocated GLFW resources.
  // ------------------------------------------------------------------
  glfwTerminate();
  return 0;
}

/* process all input: query GLFW whether relevant keys are pressed/released 
this frame and react accordingly 
-----------------------------------------------------------------------*/
glm::mat4 processInput(GLFWwindow *window, glm::mat4 View)
{
  if(glfwGetKey(window,GLFW_KEY_E) == GLFW_PRESS)
      {
        View = glm::lookAt(
                     glm::vec3(-10,0,2), 
                     glm::vec3(0,0,0), 
                     glm::vec3(0,1,0)  
	      );
      } 
  if(glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS)
  {
    View = glm::lookAt(
                     glm::vec3(10,0,-2), 
                     glm::vec3(0,0,0), 
                     glm::vec3(0,1,0)  
	      );
  }
   if(glfwGetKey(window, GLFW_KEY_F) == GLFW_PRESS)
  {   
    View = glm::lookAt(
                     glm::vec3(0,0,10), 
                     glm::vec3(0,0,0), 
                     glm::vec3(0,1,0)  
	      ); 
  }
   if(glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS)
  {   
    View = glm::lookAt(
                     glm::vec3(0,0,-10), 
                     glm::vec3(0,0,0), 
                     glm::vec3(0,1,0)  
	      ); 
  }
   if(glfwGetKey(window, GLFW_KEY_C) == GLFW_PRESS)
  {   
    View = glm::lookAt(
                     glm::vec3(0,10,2), 
                     glm::vec3(0,0,0), 
                     glm::vec3(0,1,0)  
	      );
  }
   if(glfwGetKey(window, GLFW_KEY_B) == GLFW_PRESS)
  {  
    View = glm::lookAt(
                     glm::vec3(0,-10,2), 
                     glm::vec3(0,0,0), 
                     glm::vec3(0,1,0)  
	      );  
  }

  return View;

}

float* getAllColors(float* oldArray, int colorSize, int verticesSize) {
    int newSize = verticesSize;
    float* newArray = new float[newSize];
    for (int i = 0; i < colorSize; i++) {
        newArray[i] = oldArray[i];
    }
    for (int i = 0; i < newSize; i++) {
        newArray[colorSize+i] = oldArray[i];
    }
    delete [] oldArray;
    return newArray;
}

/* glfw: whenever the window size changed (by OS or user resize) this
   callback function executes
   -------------------------------------------------------------------*/
void framebuffer_size_callback(GLFWwindow* window, int width, int height)
{
  // make sure the viewport matches the new window dimensions; note that
  // width and height will be significantly larger than specified on
  // retina displays.
  glViewport(0, 0, width, height);
}

 
